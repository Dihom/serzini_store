/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%;font-family:"Montserrat",sans-serif}body{margin:0;padding:0}details,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0;text-decoration:none;color:#fff}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;width:100%}button{font:100%/1.15 inherit}input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ul{padding:0;margin:0;list-style:none}button{background:0 0;outline:0;border:0;color:#fff;cursor:pointer}button,h1,h2,h3,h4,h5,h6,p{margin:0;padding:0}.container{margin:0 auto;max-width:1100px;width:100%}.header{background:#f9f9f9;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.25);box-shadow:0 1px 6px rgba(0,0,0,.25)}.nav,.nav-left__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.nav{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:80px}.nav-left__list{gap:30px}.nav-left__link{font-weight:600;font-size:13px;line-height:13px;color:#242424;text-transform:uppercase}.header-logo__img{width:135px}.header-right__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:30px}.header-right__link{font-weight:600;font-size:13px;line-height:13px;color:#242424;text-transform:uppercase}.heading{margin-bottom:40px}.slider{width:1100px;height:420px;margin:0 auto;position:relative;overflow:hidden}.slider__btn{position:absolute;top:50%;z-index:10;height:40px;width:40px;-webkit-box-shadow:1px 1px 4px rgba(0,0,0,.25);box-shadow:1px 1px 4px rgba(0,0,0,.25);border:0;background:#fff;opacity:.7;border-radius:50%;cursor:pointer;-webkit-transition:opacity .2s ease-in-out;-o-transition:opacity .2s ease-in-out;transition:opacity .2s ease-in-out}.slider__btn:hover{opacity:1}.slider__btn:hover .arrow-left,.slider__btn:hover .arrow-right{fill:#c03092}.slider__btn--left,.slider__btn--right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.slider__btn--left{left:8%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.slider__btn--right{right:8%;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%)}.arrow-left,.arrow-right,.heading__btn-arrow{height:15px;-webkit-transform:translateY(80%);-ms-transform:translateY(80%);transform:translateY(80%)}.arrow-left,.arrow-right{fill:#8b8b8b;-webkit-transition:fill .2s ease-in-out;-o-transition:fill .2s ease-in-out;transition:fill .2s ease-in-out}.dots,.slide{position:absolute;display:-webkit-box;display:-ms-flexbox;display:flex}.slide{top:40px;left:40px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:-webkit-transform 1s;-o-transition:transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.slide>img{margin-right:40px;width:1020px;height:340px;-o-object-fit:cover;object-fit:cover}.dots{bottom:13%;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.dots__dot{background:#d9d9d9;border:0;opacity:.7;height:10px;width:10px;border-radius:50%;margin-right:10px;cursor:pointer;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s}.dots__dot:last-child{margin:0}.dots__dot--active{background:#242424;opacity:1}.catalog{padding:80px 0;background:#f9f9f9}.catalog__text{margin-bottom:20px;font-weight:600;font-size:28px;line-height:28px;color:#242424;text-transform:uppercase}.catalog-title{margin-bottom:40px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center}.catalog__subtitle{font-weight:500;font-size:13px;line-height:28px;color:#8b8b8b}.cards{display:grid;grid-template-columns:repeat(auto-fill,320px);gap:70px 70px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.cards-item__img{margin-bottom:10px;border-radius:10px}.cards-price{margin-bottom:10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.cards-price__current{padding-right:10px;font-weight:600;font-size:20px;line-height:20px;color:#242424}.cards-price__old{font-weight:600;font-size:16px;line-height:0;-webkit-text-decoration-line:line-through;text-decoration-line:line-through;color:#8b8b8b}.cards__title{font-weight:500;font-size:14px;line-height:14px;color:#8b8b8b}.cards-stars,.cards__title{margin-bottom:10px}.cards-btn__left,.cards-btn__right,.cards-button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.cards-btn__left,.cards-btn__right{font:500 16px/16px "Montserrat";-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:150px;height:40px;border-radius:5px}.cards-btn__left{color:#fff;background:-webkit-gradient(linear,left top,right top,from(#e541b1),to(#c03092));background:-o-linear-gradient(left,#e541b1 0,#c03092 100%);background:linear-gradient(90deg,#e541b1 0,#c03092 100%)}.cards-btn__right{color:#c53296;background:0 0;border:2px solid #c03092}.about{padding:80px 0;margin-bottom:40px}.about__text--semibold{font-weight:600}.about__text--wb{font-weight:600;font-size:13px;line-height:28px;color:#c53296;text-decoration:underline}.about__image{position:relative}.about__photo--one,.about__photo--two{width:400px;height:500px;border-radius:10px}.about__photo--one{display:block;margin-top:-48px}.about__photo--two{position:absolute;top:0;left:70px;z-index:-1}.about-info,.about-title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.about-title{margin-bottom:60px;font-weight:600;font-size:28px;line-height:28px;text-align:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-transform:uppercase;color:#242424}.about-info{padding-top:40px;padding-left:40px;padding-right:110px;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.about-desc{width:500px}.about-desc__text{text-indent:20px;font-weight:500;font-size:13px;line-height:28px;color:#242424}.about-desc__text:not(:last-child){margin-bottom:15px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4ubWluLmNzcyIsImNvbXBvbmVudHMvXzAxbm9ybWFsaXplLnNjc3MiLCJjb21wb25lbnRzL18wNmNvbW1vbi5zY3NzIiwibWFpbi5jc3MiLCJjb21wb25lbnRzL18wN2hlYWRlci5zY3NzIiwiY29tcG9uZW50cy9fMDJyZXNldHMuc2NzcyIsImNvbXBvbmVudHMvXzA4aGVhZGluZy5zY3NzIiwiY29tcG9uZW50cy9fMDljYXJkcy5zY3NzIiwiY29tcG9uZW50cy9fMTBhYm91dC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFVQSxJLENDRW1DLGdCLENEQ2pDLDZCLENBa2FBLG1DLENBdlpGLEksQ0VTQSxRLENBQ0csUyxDRjZUSCxPLENBL1RBLEksQ0NFQyxhLENBYUEsRSxDRExDLGEsQ0FZRixFLENDSUMsOEIsQ0RGQyxzQixDQ0VELFEsQ0FNRSxnQixDRWtESCxJLENIR0EsRyxDQWhEQSxHLENDbURDLEksQ0FqREEsNEIsQ0RXRCxDLENDS0csYyxDRDBURCxvQixDSXpZRixVLENKb0ZBLFcsQ0NHQyxrQixDREVDLHdDLENDR0QsZ0MsQ0RNRCxDLENBQ0EsTSxDQ0VtQixrQixDRWlCbkIsSyxDSEdFLGEsQ0FRRixHLENDSUMsRyxDREZDLGEsQ0NLRCxhLENESEMsaUIsQ0NHRCx1QixDRENELEcsQ0dEQSxhLENIS0EsRyxDQ09DLFMsQ0RJRCxHLENDT0csaUIsQ0FBaUIsVSxDQVVuQixNLENEQ0Msc0IsQ0FKRixLLENBQ0EsUSxDQUNBLE0sQ0dEQSxRLENIR0Usc0IsQ0NJRCxRLENBTEEsTSxDQW1CQSxLLENERkMsZ0IsQ0NhRCxNLENESkQsTSxDQUVFLG1CLENDY0QsYSxDRExELFksQ0FDQSxhLENBSEEsTSxDQUlFLHlCLENBUUYsK0IsQ0dEQSw4QixDSEdBLCtCLENDSUMsd0IsQ0FJQSxpQixDRE5DLFMsQ0FRRiw0QixDQUNBLDJCLENBQ0EsNEIsQ0FIQSxxQixDQ1NHLDZCLENERUgsUSxDR0ZBLDBCLENIYUEsTSxDR0NBLGEsQ0ZRQyxhLENEREMsYyxDQ1FDLGtCLENESUgsUSxDQ0FDLHVCLENEUUQsUSxDQUNFLGEsQ0FRRixlLENDRUMsWSxDRHZDRCxNLENBdUNFLDZCLENDQUQscUIsQ0FLRSxTLENETUgsd0MsQ0FDQSx3QyxDQ0dHLFcsQ0RNSCxhLENDSUMsNEIsQ0VMRCxtQixDSFlBLHdDLENDS0MsdUIsQ0RJRCw0QixDQ09DLHlCLENBQUEsWSxDRVVELE8sQ0hNRSxpQixDQWtCRixRLENBUkEsUSxDS3JWQSxZLENMaVdBLEMsQ0FDQSxPLENHSkEsUSxDSE1FLDZCLENFallGLHFCLENDcVlBLEUsQ0hNRSxTLENJM1lGLFEsQ0FDRyxlLENKeVpILE0sQ0FDRSxjLENJL1lDLFMsQ0RxWUgsUSxDQzlYUyxVLENBQUEsYyxDSnVZVCxNLENBVUEsRSxDQUNBLEUsQ0FDQSxFLENHZkEsRSxDQ3hYRSxFLENKMFlGLEUsQ0FwQkEsQyxDSXBYUyxRLENBQ0EsUyxDRGdZVCxVLENIaUJFLGEsQ0k3WEEsZ0IsQ0FDTyxVLENKaVlULE8sQ0FDRSxrQixDQUNBLDRDLENJallPLG9DLENKcVlULEksQ0FhQSxlLENNamJHLG1CLENBRUEsbUIsQ0g4WkgsWSxDRzFaRyx3QixDQUNHLHFCLENBQ0Esa0IsQ040Wk4sSSxDTTliQSx3QixDQUNHLHFCLENIa2JILDZCLENHN1pBLFcsQ05xYkEsZSxDTXhhTSxRLENOa2JOLGUsQ0FDRSxlLENNOWFJLGMsQ0FDQSxnQixDQUNBLGEsQ0FDQSx3QixDTmtiTixpQixDTWhiTSxXLENOb2JOLG1CLENHdEJBLG1CLENHdlpHLG1CLENBQ0csWSxDSHlaTix3QixDR3RaRyxxQixDQUNHLGtCLENId1pOLFEsQ0gwQkEsbUIsQ001YU0sZSxDQUNBLGMsQ044YUosZ0IsQ0FDQSxhLENNOWFJLHdCLENOa2JOLFEsQ0c1QkEsa0IsQ0hnQ0EsTyxDTS9hTSxZLENBQ0EsWSxDTmliSixhLENBQ0EsaUIsQ01qYkksZSxDTnFiTixZLENHbENBLGlCLENIb0NFLE8sQ01sYkYsVSxDQUNHLFcsQ0FDQSxVLENOb2JELDhDLENBQ0Esc0MsQ0dwQ0YsUSxDSHNDRSxlLENNcGJGLFUsQ0FDRyxpQixDQUNBLGMsQ0FDQSwwQyxDTnNiRCxxQyxDQUNBLGtDLENBR0Ysa0IsQ0d4Q0EsUyxDSDRDQSw4QixDQUlBLCtCLENNNWJHLFksQ05nY0gsa0IsQ0FhQSxtQixDTWpjRyxtQixDQUNBLG1CLENObWNELFksQ0duREYsdUIsQ0hxREUsb0IsQ00vYkYsc0IsQ042YUEsa0IsQ00xYkcsTyxDQUFBLHNDLENIZ1pILGtDLENIb0RFLDhCLENBR0YsbUIsQ016YkcsUSxDQUNBLHFDLENBQ0EsaUMsQ0FDQSw2QixDTjBjSCxXLENBQ0EsWSxDQVJBLG1CLENNbGNHLFcsQ0FBQSxpQyxDSDZZSCw2QixDSHlERSx5QixDQUdGLFcsQ0FDQSxZLENNbGNHLFksQ0FJQSx1QyxDQUFBLGtDLENBQUEsK0IsQ05xZUgsSyxDTWxlQSxNLENDakhHLGlCLENBRUEsbUIsQ1B5bEJELG1CLENBQ0EsWSxDTTNlRixNLENIOFlBLFEsQ0gyREUsUyxDTWxjQyx3QixDSDZZSCxxQixDSDJERSxrQixDT25sQkYsdUIsQ0FDRyxvQixDQUNBLHNCLENKMmhCSCx1QyxDSXRoQk0sMEIsQ0FDQSx1QixDQUNBLDRDLENQcWxCTixVLENHekRBLGlCLENIMkRFLFksQ09obEJGLFksQ0FDRyxtQixDQUNBLGdCLENQb2xCSCxLLENBRUUsVSxDQUNBLFEsQ09ybEJDLGtDLENQdWxCRCw4QixDQUNBLDBCLENBTUYsVSxDT3psQkEsa0IsQ0FDRyxRLENBQ0EsVSxDQUNBLFcsQ0FDQSxVLENKd2hCSCxpQixDSG9FRSxpQixDT3RsQkYsYyxDQUNHLDBCLENBQ0EscUIsQ0FDQSxrQixDUDBsQkgscUIsQ0dwRUEsUSxDSHdFQSxrQixDTzdrQk0sa0IsQ0FNTixTLENQNmtCQSxRLENPM2tCRyxjLENBQ0Esa0IsQ0pzZ0JILGMsQ0lsZ0JHLGtCLENBQ0csZSxDQUNBLGMsQ0FDQSxnQixDQUNBLGEsQ0FDQSx3QixDUCtrQk4sYyxDT3hrQk0sa0IsQ0FDQSxtQixDQUNBLG1CLENQMGtCSixZLENPemtCSSwyQixDSmlnQk4sNEIsQ0gyRUUseUIsQ09ya0JDLHFCLENBQ0csdUIsQ0FDQSxvQixDQUNBLHNCLENBQ0Esd0IsQ0FDQSxxQixDSjZmTixrQixDSW5mQSxpQixDUGlrQkEsa0IsQ085akJBLGUsQ0FDRyxjLENBQUEsZ0IsQ0FBQSxhLENQb2tCSCxNLENPbGtCRyxZLENQb2tCRCw2QyxDQUNBLGEsQ0cvRUYsdUIsQ0hpRkUsb0IsQ09oa0JDLHNCLENQb2tCSCxnQixDT2xrQk0sa0IsQ1Bva0JKLGtCLENBR0YsWSxDQUNFLGtCLENPdGtCSSxtQixDQUNBLG1CLENBQ0EsWSxDQUNBLHdCLENBQ0EscUIsQ0FDQSxrQixDUDBrQk4scUIsQ092a0JNLGtCLENBQUEsZSxDQUNBLGMsQ0prZk4sZ0IsQ0k3ZUcsYSxDUHlrQkgsaUIsQ092a0JNLGUsQ1B5a0JKLGMsQ0FDQSxhLENPemtCSSx5QyxDUDJrQkosaUMsQ0FDQSxhLENBR0YsYSxDTzFrQk0sZSxDQUNBLGMsQ0FDQSxnQixDQUNBLGEsQ1Ara0JOLFksQ0FSQSxhLENHckZBLGtCLENBZUEsZ0IsQ0hrSEEsaUIsQ0FoQ0EsYSxDUXB1QkcsbUIsQ0x3b0JILG1CLENLcG9CRyxZLENBQ0Esd0IsQ0xzb0JILHFCLENLam9CRyxrQixDQUNHLHdCLENBQ0EscUIsQ0FDQSw2QixDTHFvQk4sZ0IsQ0hrSEEsaUIsQ1FqdEJBLCtCLENBS0csdUIsQ0FDQSxvQixDUnF0QkQsc0IsQ0FDQSxXLENRcnRCQyxXLENSeXRCRCxpQixDR2pJRixnQixDSzVtQk0sVSxDQUNBLGdGLENBQ0EsMEQsQ0FDQSx3RCxDUjJ0Qk4saUIsQ1F6c0JHLGEsQ1J1dEJELGMsQ1F0dEJDLHdCLENSMnRCSCxNLENReHRCQSxjLENBQ0csa0IsQ1I0dEJILHNCLENRenRCRyxlLENSNnRCSCxnQixDUTN0QkcsZSxDUjZ0QkQsYyxDQUNBLGdCLENRN3RCQyxhLENSK3RCRCx5QixDR3hHRixhLENINEdFLGlCLENHeEdGLGtCLENIbUhBLGtCLENBSUUsVyxDQUNBLFksQ0FFQSxrQixDRzFIRixrQixDS25uQkcsYSxDQUVHLGdCLENSb3VCTixrQixDUTN0QkEsaUIsQ0FDRyxLLENMa25CSCxTLENIOEdFLFUsQ0F1QkYsVyxDQW5CQSxZLENBdUJFLG1CLENBQ0EsbUIsQ0FDQSxZLENBR0Esd0IsQ0FDQSxxQixDQUNBLGtCLENBOUJGLFksQ0FDRSxrQixDQUNBLGUsQ0FDQSxjLENBQ0EsZ0IsQ0FPQSxpQixDQUNBLHVCLENBQ0Esb0IsQ0FDQSxzQixDQUNBLHdCLENBQ0EsYSxDQUdGLFcsQ0FDRSxnQixDQUNBLGlCLENBQ0EsbUIsQ0FJQSxrQixDQUNBLGMsQ0FJQSx3QixDQUNBLHFCLENBQ0EsNkIsQ0FDQSxVLENBR0YsVyxDQUNFLFcsQ0FHRixpQixDQUNFLGdCLENBQ0EsZSxDQUNBLGMsQ0FDQSxnQixDQUNBLGEsQ0FHRixzQkFBc0IsWSxDQUNwQixrQiIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQ6IDFlbSBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQ6IDFlbSBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogMTAwJS8xLjE1IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgLyogMSAqL1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPWJ1dHRvbl0sXG5bdHlwZT1yZXNldF0sXG5bdHlwZT1zdWJtaXRdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9cmVzZXRdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9YnV0dG9uXTotbW96LWZvY3VzcmluZyxcblt0eXBlPXJlc2V0XTotbW96LWZvY3VzcmluZyxcblt0eXBlPXN1Ym1pdF06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1jaGVja2JveF0sXG5bdHlwZT1yYWRpb10ge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPXNlYXJjaF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4qLFxuKjo6YWZ0ZXIsXG4qOjpiZWZvcmUge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbnVsIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2ZmZjtcbn1cblxucCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiAjZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDExMDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjRjlGOUY5O1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAxcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIGJveC1zaGFkb3c6IDBweCAxcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG59XG5cbi5uYXYge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgaGVpZ2h0OiA4MHB4O1xufVxuXG4ubmF2LWxlZnRfX2xpc3Qge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMzBweDtcbn1cblxuLm5hdi1sZWZ0X19saW5rIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaW5lLWhlaWdodDogMTNweDtcbiAgY29sb3I6ICMyNDI0MjQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5oZWFkZXItbG9nb19faW1nIHtcbiAgd2lkdGg6IDEzNXB4O1xufVxuXG4uaGVhZGVyLXJpZ2h0X19saXN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDMwcHg7XG59XG5cbi5oZWFkZXItcmlnaHRfX2xpbmsge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAxM3B4O1xuICBjb2xvcjogIzI0MjQyNDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmhlYWRpbmcge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4uc2xpZGVyIHtcbiAgd2lkdGg6IDExMDBweDtcbiAgaGVpZ2h0OiA0MjBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnNsaWRlcl9fYnRuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgei1pbmRleDogMTA7XG4gIGhlaWdodDogNDBweDtcbiAgd2lkdGg6IDQwcHg7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMXB4IDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgYm94LXNoYWRvdzogMXB4IDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBvcGFjaXR5OiAwLjc7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4ycyBlYXNlLWluLW91dDtcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1pbi1vdXQ7XG59XG5cbi5zbGlkZXJfX2J0bjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5zbGlkZXJfX2J0bjpob3ZlciAuYXJyb3ctbGVmdCB7XG4gIGZpbGw6ICNDMDMwOTI7XG59XG5cbi5zbGlkZXJfX2J0bjpob3ZlciAuYXJyb3ctcmlnaHQge1xuICBmaWxsOiAjQzAzMDkyO1xufVxuXG4uc2xpZGVyX19idG4tLWxlZnQge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbGVmdDogOCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi5zbGlkZXJfX2J0bi0tcmlnaHQge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcmlnaHQ6IDglO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKDUwJSwgLTUwJSk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIC01MCUpO1xufVxuXG4uaGVhZGluZ19fYnRuLWFycm93IHtcbiAgaGVpZ2h0OiAxNXB4O1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSg4MCUpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDgwJSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg4MCUpO1xufVxuXG4uYXJyb3ctbGVmdCxcbi5hcnJvdy1yaWdodCB7XG4gIGhlaWdodDogMTVweDtcbiAgZmlsbDogIzhiOGI4YjtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODAlKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg4MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODAlKTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBmaWxsIDAuMnMgZWFzZS1pbi1vdXQ7XG4gIC1vLXRyYW5zaXRpb246IGZpbGwgMC4ycyBlYXNlLWluLW91dDtcbiAgdHJhbnNpdGlvbjogZmlsbCAwLjJzIGVhc2UtaW4tb3V0O1xufVxuXG4uc2xpZGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNDBweDtcbiAgbGVmdDogNDBweDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMXM7XG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDFzO1xuICAtby10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXM7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcztcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzLCAtd2Via2l0LXRyYW5zZm9ybSAxcztcbn1cblxuLnNsaWRlID4gaW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xuICB3aWR0aDogMTAyMHB4O1xuICBoZWlnaHQ6IDM0MHB4O1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5kb3RzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDEzJTtcbiAgbGVmdDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5kb3RzX19kb3Qge1xuICBiYWNrZ3JvdW5kOiAjRDlEOUQ5O1xuICBib3JkZXI6IG5vbmU7XG4gIG9wYWNpdHk6IDAuNztcbiAgaGVpZ2h0OiAxMHB4O1xuICB3aWR0aDogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC41cztcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuNXM7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xufVxuXG4uZG90c19fZG90Omxhc3QtY2hpbGQge1xuICBtYXJnaW46IDA7XG59XG5cbi5kb3RzX19kb3QtLWFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMyNDI0MjQ7XG4gIC8qIGJhY2tncm91bmQtY29sb3I6ICNmZmY7ICovXG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXRhbG9nIHtcbiAgcGFkZGluZzogODBweCAwcHggODBweCAwcHg7XG4gIGJhY2tncm91bmQ6ICNGOUY5Rjk7XG59XG5cbi5jYXRhbG9nX190ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAyOHB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICMyNDI0MjQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5jYXRhbG9nLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2F0YWxvZ19fc3VidGl0bGUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogIzhCOEI4Qjtcbn1cblxuLmNhcmRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCAzMjBweCk7XG4gIGdhcDogNzBweCA3MHB4O1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5jYXJkcy1pdGVtX19pbWcge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4uY2FyZHMtcHJpY2Uge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jYXJkcy1wcmljZV9fY3VycmVudCB7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGNvbG9yOiAjMjQyNDI0O1xufVxuXG4uY2FyZHMtcHJpY2VfX29sZCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDBweDtcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tbGluZTogbGluZS10aHJvdWdoO1xuICB0ZXh0LWRlY29yYXRpb24tbGluZTogbGluZS10aHJvdWdoO1xuICBjb2xvcjogIzhCOEI4Qjtcbn1cblxuLmNhcmRzX190aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gIGNvbG9yOiAjOEI4QjhCO1xufVxuXG4uY2FyZHMtc3RhcnMge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uY2FyZHMtYnV0dG9uIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5jYXJkcy1idG5fX2xlZnQge1xuICBmb250OiBub3JtYWwgNTAwIDE2cHgvMTZweCBcIk1vbnRzZXJyYXRcIjtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCByaWdodCB0b3AsIGZyb20oI2U1NDFiMSksIHRvKCNDMDMwOTIpKTtcbiAgYmFja2dyb3VuZDogLW8tbGluZWFyLWdyYWRpZW50KGxlZnQsICNlNTQxYjEgMCUsICNDMDMwOTIgMTAwJSk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgI2U1NDFiMSAwJSwgI0MwMzA5MiAxMDAlKTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uY2FyZHMtYnRuX19yaWdodCB7XG4gIGZvbnQ6IG5vcm1hbCA1MDAgMTZweC8xNnB4IFwiTW9udHNlcnJhdFwiO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDE1MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGNvbG9yOiAjQzUzMjk2O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjQzAzMDkyO1xufVxuXG4uYWJvdXQge1xuICBwYWRkaW5nOiA4MHB4IDBweDtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cblxuLmFib3V0X190ZXh0LS1zZW1pYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5hYm91dF9fdGV4dC0td2Ige1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0M1MzI5NjtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5hYm91dF9faW1hZ2Uge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hYm91dF9fcGhvdG8tLW9uZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiAtNDhweDtcbiAgd2lkdGg6IDQwMHB4O1xuICBoZWlnaHQ6IDUwMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4uYWJvdXRfX3Bob3RvLS10d28ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICBsZWZ0OiA3MHB4O1xuICB3aWR0aDogNDAwcHg7XG4gIGhlaWdodDogNTAwcHg7XG4gIHotaW5kZXg6IC0xO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4uYWJvdXQtdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDI4cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzI0MjQyNDtcbn1cblxuLmFib3V0LWluZm8ge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMTBweDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5hYm91dC1kZXNjIHtcbiAgd2lkdGg6IDUwMHB4O1xufVxuXG4uYWJvdXQtZGVzY19fdGV4dCB7XG4gIHRleHQtaW5kZW50OiAyMHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogIzI0MjQyNDtcbn1cblxuLmFib3V0LWRlc2NfX3RleHQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XHJcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnZiWEJ2Ym1WdWRITXZYekF4Ym05eWJXRnNhWHBsTG5OamMzTWlMQ0p0WVdsdUxtTnpjeUlzSW1OdmJYQnZibVZ1ZEhNdlh6QXljbVZ6WlhSekxuTmpjM01pTENKamIyMXdiMjVsYm5SekwxOHdObU52YlcxdmJpNXpZM056SWl3aVkyOXRjRzl1Wlc1MGN5OWZNRGRvWldGa1pYSXVjMk56Y3lJc0ltTnZiWEJ2Ym1WdWRITXZYekE0YUdWaFpHbHVaeTV6WTNOeklpd2lZMjl0Y0c5dVpXNTBjeTlmTURsallYSmtjeTV6WTNOeklpd2lZMjl0Y0c5dVpXNTBjeTlmTVRCaFltOTFkQzV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMREpGUVVGQk8wRkJSVUU3SzBWQlFVRTdRVUZIUVRzN08wVkJRVUU3UVVGTFF6dEZRVU5GTEdsQ1FVRkJPMFZCUVcxQ0xFMUJRVUU3UlVGRGJrSXNPRUpCUVVFN1JVRkJaME1zVFVGQlFUdEJRMEZ1UXpzN1FVUkhRenNyUlVGQlFUdEJRVWRCT3p0RlFVRkJPMEZCU1VFN1JVRkRSU3hUUVVGQk8wRkRSa2c3TzBGRVMwTTdPMFZCUVVFN1FVRkpRVHRGUVVORkxHTkJRVUU3UVVOSVNEczdRVVJOUXpzN08wVkJRVUU3UVVGTFFUdEZRVU5GTEdOQlFVRTdSVUZEUVN4blFrRkJRVHRCUTBwSU96dEJSRTlET3l0RlFVRkJPMEZCUjBFN096dEZRVUZCTzBGQlMwRTdSVUZEUlN3clFrRkJRVHRWUVVGQkxIVkNRVUZCTzBWQlFYbENMRTFCUVVFN1JVRkRla0lzVTBGQlFUdEZRVUZYTEUxQlFVRTdSVUZEV0N4cFFrRkJRVHRGUVVGdFFpeE5RVUZCTzBGRFNIUkNPenRCUkUxRE96czdSVUZCUVR0QlFVdEJPMFZCUTBVc2FVTkJRVUU3UlVGQmJVTXNUVUZCUVR0RlFVTnVReXhqUVVGQk8wVkJRV2RDTEUxQlFVRTdRVU5HYmtJN08wRkVTME03SzBWQlFVRTdRVUZIUVRzN1JVRkJRVHRCUVVsQk8wVkJRMFVzTmtKQlFVRTdSVUZEUVN4eFFrRkJRVHRCUTBwSU96dEJSRTlET3pzN1JVRkJRVHRCUVV0Qk8wVkJRMFVzYlVKQlFVRTdSVUZCY1VJc1RVRkJRVHRGUVVOeVFpd3dRa0ZCUVR0RlFVRTBRaXhOUVVGQk8wVkJRelZDTEhsRFFVRkJPMVZCUVVFc2FVTkJRVUU3UlVGQmJVTXNUVUZCUVR0QlEwWjBRenM3UVVSTFF6czdSVUZCUVR0QlFVbEJPenRGUVVWRkxHMUNRVUZCTzBGRFNFZzdPMEZFVFVNN096dEZRVUZCTzBGQlMwRTdPenRGUVVkRkxHbERRVUZCTzBWQlFXMURMRTFCUVVFN1JVRkRia01zWTBGQlFUdEZRVUZuUWl4TlFVRkJPMEZEUm01Q096dEJSRXRET3p0RlFVRkJPMEZCU1VFN1JVRkRSU3hqUVVGQk8wRkRTRWc3TzBGRVRVTTdPenRGUVVGQk8wRkJTMEU3TzBWQlJVVXNZMEZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEhkQ1FVRkJPMEZEU2tnN08wRkVUME03UlVGRFJTeGxRVUZCTzBGRFNrZzdPMEZFVDBNN1JVRkRSU3hYUVVGQk8wRkRTa2c3TzBGRVQwTTdLMFZCUVVFN1FVRkhRVHM3UlVGQlFUdEJRVWxCTzBWQlEwVXNhMEpCUVVFN1JVRkRRU3hYUVVGQk8wRkRUa2c3TzBGRVUwTTdLMFZCUVVFN1FVRkhRVHM3TzBWQlFVRTdRVUZMUVRzN096czdSVUZMUlN4dlFrRkJRVHRGUVVGelFpeE5RVUZCTzBWQlEzUkNMR1ZCUVVFN1JVRkJhVUlzVFVGQlFUdEZRVU5xUWl4cFFrRkJRVHRGUVVGdFFpeE5RVUZCTzBWQlEyNUNMRk5CUVVFN1JVRkJWeXhOUVVGQk8wRkRTbVE3TzBGRVQwTTdPenRGUVVGQk8wRkJTMEU3TzBWQlExRXNUVUZCUVR0RlFVTk9MR2xDUVVGQk8wRkRTa2c3TzBGRVQwTTdPenRGUVVGQk8wRkJTMEU3TzBWQlExTXNUVUZCUVR0RlFVTlFMRzlDUVVGQk8wRkRTa2c3TzBGRVQwTTdPMFZCUVVFN1FVRkpRVHM3T3p0RlFVbEZMREJDUVVGQk8wRkRURWc3TzBGRVVVTTdPMFZCUVVFN1FVRkpRVHM3T3p0RlFVbEZMR3RDUVVGQk8wVkJRMEVzVlVGQlFUdEJRMDVJT3p0QlJGTkRPenRGUVVGQk8wRkJTVUU3T3pzN1JVRkpSU3c0UWtGQlFUdEJRMUJJT3p0QlJGVkRPenRGUVVGQk8wRkJTVUU3UlVGRFJTdzRRa0ZCUVR0QlExSklPenRCUkZkRE96czdPenRGUVVGQk8wRkJUMEU3UlVGRFJTdzRRa0ZCUVR0VlFVRkJMSE5DUVVGQk8wVkJRWGRDTEUxQlFVRTdSVUZEZUVJc1kwRkJRVHRGUVVGblFpeE5RVUZCTzBWQlEyaENMR05CUVVFN1JVRkJaMElzVFVGQlFUdEZRVU5vUWl4bFFVRkJPMFZCUVdsQ0xFMUJRVUU3UlVGRGFrSXNWVUZCUVR0RlFVRlpMRTFCUVVFN1JVRkRXaXh0UWtGQlFUdEZRVUZ4UWl4TlFVRkJPMEZEU0hoQ096dEJSRTFET3p0RlFVRkJPMEZCU1VFN1JVRkRSU3gzUWtGQlFUdEJRMHBJT3p0QlJFOURPenRGUVVGQk8wRkJTVUU3UlVGRFJTeGpRVUZCTzBGRFRFZzdPMEZFVVVNN096dEZRVUZCTzBGQlMwRTdPMFZCUlVVc09FSkJRVUU3VlVGQlFTeHpRa0ZCUVR0RlFVRjNRaXhOUVVGQk8wVkJRM2hDTEZWQlFVRTdSVUZCV1N4TlFVRkJPMEZEU21ZN08wRkVUME03TzBWQlFVRTdRVUZKUVRzN1JVRkZSU3haUVVGQk8wRkRURWc3TzBGRVVVTTdPenRGUVVGQk8wRkJTMEU3UlVGRFJTdzJRa0ZCUVR0RlFVRXJRaXhOUVVGQk8wVkJReTlDTEc5Q1FVRkJPMFZCUVhOQ0xFMUJRVUU3UVVOS2VrSTdPMEZFVDBNN08wVkJRVUU3UVVGSlFUdEZRVU5GTEhkQ1FVRkJPMEZEVEVnN08wRkVVVU03T3p0RlFVRkJPMEZCUzBFN1JVRkRSU3d3UWtGQlFUdEZRVUUwUWl4TlFVRkJPMFZCUXpWQ0xHRkJRVUU3UlVGQlpTeE5RVUZCTzBGRFNteENPenRCUkU5RE95dEZRVUZCTzBGQlIwRTdPMFZCUVVFN1FVRkpRVHRGUVVORkxHTkJRVUU3UVVOT1NEczdRVVJUUXpzN1JVRkJRVHRCUVVsQk8wVkJRMFVzYTBKQlFVRTdRVU5RU0RzN1FVUlZRenNyUlVGQlFUdEJRVWRCT3p0RlFVRkJPMEZCU1VFN1JVRkRSU3hoUVVGQk8wRkRWRWc3TzBGRVdVTTdPMFZCUVVFN1FVRkpRVHRGUVVORkxHRkJRVUU3UVVOV1NEczdRVU51VmtFN1JVRkRSeXc0UWtGQlFUdFZRVUZCTEhOQ1FVRkJPMEZFYzFaSU96dEJReTlWUVR0RlFVTkhMRk5CUVVFN1JVRkRRU3hWUVVGQk8wRkVhMVpJT3p0QlF5OVZRVHRGUVVOSExGVkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNaMEpCUVVFN1FVUnJWa2c3TzBGREwxVkJPMFZCUTBjc2NVSkJRVUU3UlVGRFFTeFhRVUZCTzBGRWExWklPenRCUXk5VlFUdEZRVU5ITEZWQlFVRTdSVUZEUVN4VFFVRkJPMEZFYTFaSU96dEJReTlWUVR0RlFVTkhMR2RDUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4VlFVRkJPMFZCUTBFc1UwRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeGxRVUZCTzBGRWExWklPenRCUXk5VlFUdEZRVU5ITEZOQlFVRTdSVUZEUVN4VlFVRkJPMEZFYTFaSU96dEJSVE5ZUVR0RlFVTkhMSEZEUVVGQk8wRkdPRmhJT3p0QlJUbFdRVHRGUVVOSExHTkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMRmRCUVVFN1FVWnBWMGc3TzBGSGNsbEJPMFZCUTBjc2JVSkJRVUU3UlVGRFFTeHRSRUZCUVR0VlFVRkJMREpEUVVGQk8wRklkMWxJT3p0QlIyeFpRVHRGUVVOSExHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTERoQ1FVRkJPMFZCUTBFc1dVRkJRVHRCU0hGWlNEczdRVWN2V0VVN1JVRkRUeXh2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEZRVU5CTEZOQlFVRTdRVWhyV1ZRN1FVZDRXRVU3UlVGRFR5eG5Ra0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4NVFrRkJRVHRCU0RCWVZEczdRVWRzV0VVN1JVRkRUeXhaUVVGQk8wRkljVmhVT3p0QlJ6VlhSVHRGUVVOUExHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBWQlEwRXNVMEZCUVR0QlNDdFhWRHRCUjNKWFJUdEZRVU5QTEdkQ1FVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMSGxDUVVGQk8wRklkVmRVT3p0QlNTOWhRVHRGUVVOSExHMUNRVUZCTzBGS2EySklPMEZKTjFwQk8wVkJRMGNzWVVGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRlFTeG5Ra0ZCUVR0QlNqaGFTRHRCU1RGYVJ6dEZRVU5ITEd0Q1FVRkJPMFZCUTBFc1VVRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMRzFFUVVGQk8xVkJRVUVzTWtOQlFVRTdSVUZGUVN4WlFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzTkVOQlFVRTdSVUZCUVN4MVEwRkJRVHRGUVVGQkxHOURRVUZCTzBGS01scE9PMEZKZUZwSE8wVkJRMGNzVlVGQlFUdEJTakJhVGp0QlNYWmFSenRGUVVOSExHRkJRVUU3UVVwNVdrNDdRVWwwV2tjN1JVRkRSeXhoUVVGQk8wRktkMXBPTzBGSmJscEhPMFZCUTBjc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3gzUWtGQlFUdE5RVUZCTEhGQ1FVRkJPMVZCUVVFc2RVSkJRVUU3UlVGRFFTeFJRVUZCTzBWQlEwRXNkME5CUVVFN1RVRkJRU3h2UTBGQlFUdFZRVUZCTEdkRFFVRkJPMEZLY1ZwT08wRkphRnBITzBWQlEwY3NiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN4M1FrRkJRVHROUVVGQkxIRkNRVUZCTzFWQlFVRXNkVUpCUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzZFVOQlFVRTdUVUZCUVN4dFEwRkJRVHRWUVVGQkxDdENRVUZCTzBGS2ExcE9PenRCU1RsWlFUdEZRVU5ITEZsQlFVRTdSVUZEUVN4clEwRkJRVHROUVVGQkxEaENRVUZCTzFWQlFVRXNNRUpCUVVFN1FVcHBXa2c3TzBGSk9WbEJPMFZCUTBjc1dVRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTeHJRMEZCUVR0TlFVRkJMRGhDUVVGQk8xVkJRVUVzTUVKQlFVRTdSVUZEUVN4NVEwRkJRVHRGUVVGQkxHOURRVUZCTzBWQlFVRXNhVU5CUVVFN1FVcHBXa2c3TzBGSk9WbEJPMFZCUTBjc2EwSkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNWVUZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRVUVzYjBKQlFVRTdSVUZCUVN4aFFVRkJPMFZCUTBFc2VVSkJRVUU3VFVGQlFTeHpRa0ZCUVR0VlFVRkJMRzFDUVVGQk8wVkJRMEVzZDBKQlFVRTdUVUZCUVN4eFFrRkJRVHRWUVVGQkxIVkNRVUZCTzBWQlJVRXNkME5CUVVFN1JVRkJRU3huUTBGQlFUdEZRVUZCTERKQ1FVRkJPMFZCUVVFc2QwSkJRVUU3UlVGQlFTdzRRMEZCUVR0QlNtZGFTRHM3UVVrM1dVRTdSVUZEUnl4clFrRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTeGhRVUZCTzBWQlEwRXNiMEpCUVVFN1MwRkJRU3hwUWtGQlFUdEJTbWRhU0RzN1FVa3hXVUU3UlVGRFJ5eHJRa0ZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzYlVOQlFVRTdUVUZCUVN3clFrRkJRVHRWUVVGQkxESkNRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdRVW8yV1VnN08wRkpNVmxCTzBWQlEwY3NXVUZCUVR0RlFVTkJMSGxDUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3cwUWtGQlFUdEZRVUZCTEhWQ1FVRkJPMFZCUVVFc2IwSkJRVUU3UVVvMldVZzdPMEZKTVZsQk8wVkJRMGNzVTBGQlFUdEJTalpaU0RzN1FVa3hXVUU3UlVGRFJ5dzBRa0ZCUVR0RlFVTkJMSGxDUVVGQk8wVkJRMEVzVlVGQlFUdEJTalpaU0RzN1FVdDRhRUpCTzBWQlEwY3NNRUpCUVVFN1JVRkRRU3h0UWtGQlFUdEJUREpvUWtnN1FVdDJhRUpITzBWQlEwY3NiVUpCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeDVRa0ZCUVR0QlRIbG9RazQ3TzBGTGNtaENRVHRGUVVOSExHMUNRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN3MFFrRkJRVHRGUVVGQkxEWkNRVUZCTzAxQlFVRXNNRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEZRVU5CTEhkQ1FVRkJPMDFCUVVFc2NVSkJRVUU3VlVGQlFTeDFRa0ZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN4dFFrRkJRVHRGUVVOQkxHdENRVUZCTzBGTWQyaENTRHM3UVV0eWFFSkJPMFZCUTBjc1owSkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hqUVVGQk8wRk1kMmhDU0RzN1FVdHNhRUpCTzBWQlEwY3NZVUZCUVR0RlFVTkJMQ3REUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEhkQ1FVRkJPMDFCUVVFc2NVSkJRVUU3VlVGQlFTeDFRa0ZCUVR0QlRIRm9Ra2c3TzBGTGRtZENSenRGUVVOSExHMUNRVUZCTzBWQlEwRXNiVUpCUVVFN1FVd3daMEpPTzBGTGNHZENRVHRGUVVOSExHMUNRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNiVUpCUVVFN1FVeHpaMEpJTzBGTGJHZENSenRGUVVOSExHMUNRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4alFVRkJPMEZNYjJkQ1RqdEJTeTltUnp0RlFVTkhMR2RDUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc01FTkJRVUU3VlVGQlFTeHJRMEZCUVR0RlFVTkJMR05CUVVFN1FVeHBaMEpPT3p0QlN6Rm1SenRGUVVOSExHMUNRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4alFVRkJPMEZNTm1aT08wRkxibVpCTzBWQlEwY3NiVUpCUVVFN1FVeHhaa2c3TzBGTGJtWkJPMFZCUTBjc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3g1UWtGQlFUdE5RVUZCTEhOQ1FVRkJPMVZCUVVFc2JVSkJRVUU3UlVGRFFTeDVRa0ZCUVR0TlFVRkJMSE5DUVVGQk8xVkJRVUVzT0VKQlFVRTdRVXh6WmtnN08wRkxMMlZITzBWQlEwY3NiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNiVUpCUVVFN1JVRkRRU3gzUWtGQlFUdE5RVUZCTEhGQ1FVRkJPMVZCUVVFc2RVSkJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMSGxDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3h4UmtGQlFUdEZRVUZCTERoRVFVRkJPMFZCUVVFc05FUkJRVUU3UlVGRFFTeHJRa0ZCUVR0QlRHdG1UanRCU3pkbFJ6dEZRVU5ITEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTEcxQ1FVRkJPMFZCUTBFc2QwSkJRVUU3VFVGQlFTeHhRa0ZCUVR0VlFVRkJMSFZDUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc2RVSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMSGxDUVVGQk8wRk1LMlZPT3p0QlRYSnZRa0U3UlVGRFJ5eHBRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wRk9kMjlDU0R0QlRYQnZRa2M3UlVGRFFTeG5Ra0ZCUVR0QlRuTnZRa2c3UVUxcWIwSkhPMFZCUTBjc1owSkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzTUVKQlFVRTdRVTV0YjBKT08wRk5PVzVDUnp0RlFVTkhMR3RDUVVGQk8wRk9aMjlDVGp0QlRUTnVRa2M3UlVGRFJ5eGpRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEcxQ1FVRkJPMEZPTm01Q1RqdEJUWGh1UWtjN1JVRkRSeXhyUWtGQlFUdEZRVU5CTEZGQlFVRTdSVUZEUVN4VlFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNiVUpCUVVFN1FVNHdia0pPT3p0QlRXeHVRa0U3UlVGRFJ5eHRRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3g1UWtGQlFUdE5RVUZCTEhOQ1FVRkJPMVZCUVVFc2JVSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMSGRDUVVGQk8wMUJRVUVzY1VKQlFVRTdWVUZCUVN4MVFrRkJRVHRGUVVOQkxIbENRVUZCTzBWQlEwRXNZMEZCUVR0QlRuRnVRa2c3TzBGTmJtNUNRVHRGUVVOSExHbENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNiVUpCUVVFN1RVRkJRU3hsUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTERoQ1FVRkJPMFZCUTBFc1YwRkJRVHRCVG5OdVFrZzdPMEZOY0c1Q1FUdEZRVU5ITEZsQlFVRTdRVTUxYmtKSU8wRk5ibTVDUnp0RlFVVkhMR2xDUVVGQk8wVkJSVUVzWjBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeGpRVUZCTzBGT2JXNUNUanM3UVUwdmJVSkJPMFZCUTBjc2JVSkJRVUU3UVU1cmJrSklJaXdpWm1sc1pTSTZJbTFoYVc0dVkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHlvaElHNXZjbTFoYkdsNlpTNWpjM01nZGpndU1DNHhJSHdnVFVsVUlFeHBZMlZ1YzJVZ2ZDQm5hWFJvZFdJdVkyOXRMMjVsWTI5c1lYTXZibTl5YldGc2FYcGxMbU56Y3lBcUwxeHlYRzVjY2x4dUx5b2dSRzlqZFcxbGJuUmNjbHh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljY2x4dVhISmNiaThxS2x4eVhHNGdLaUF4TGlCRGIzSnlaV04wSUhSb1pTQnNhVzVsSUdobGFXZG9kQ0JwYmlCaGJHd2dZbkp2ZDNObGNuTXVYSEpjYmlBcUlESXVJRkJ5WlhabGJuUWdZV1JxZFhOMGJXVnVkSE1nYjJZZ1ptOXVkQ0J6YVhwbElHRm1kR1Z5SUc5eWFXVnVkR0YwYVc5dUlHTm9ZVzVuWlhNZ2FXNGdhVTlUTGx4eVhHNGdLaTljY2x4dVhISmNiaUJvZEcxc0lIdGNjbHh1SUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TVRVN0lDOHFJREVnS2k5Y2NseHVJQ0FnTFhkbFltdHBkQzEwWlhoMExYTnBlbVV0WVdScWRYTjBPaUF4TURBbE95QXZLaUF5SUNvdlhISmNiaUI5WEhKY2JpQmNjbHh1SUM4cUlGTmxZM1JwYjI1elhISmNiaUFnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh5WEc0Z1hISmNiaUF2S2lwY2NseHVJQ0FxSUZKbGJXOTJaU0IwYUdVZ2JXRnlaMmx1SUdsdUlHRnNiQ0JpY205M2MyVnljeTVjY2x4dUlDQXFMMXh5WEc0Z1hISmNiaUJpYjJSNUlIdGNjbHh1SUNBZ2JXRnlaMmx1T2lBd08xeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlGSmxibVJsY2lCMGFHVWdZRzFoYVc1Z0lHVnNaVzFsYm5RZ1kyOXVjMmx6ZEdWdWRHeDVJR2x1SUVsRkxseHlYRzRnSUNvdlhISmNiaUJjY2x4dUlHMWhhVzRnZTF4eVhHNGdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUgxY2NseHVJRnh5WEc0Z0x5b3FYSEpjYmlBZ0tpQkRiM0p5WldOMElIUm9aU0JtYjI1MElITnBlbVVnWVc1a0lHMWhjbWRwYmlCdmJpQmdhREZnSUdWc1pXMWxiblJ6SUhkcGRHaHBiaUJnYzJWamRHbHZibUFnWVc1a1hISmNiaUFnS2lCZ1lYSjBhV05zWldBZ1kyOXVkR1Y0ZEhNZ2FXNGdRMmh5YjIxbExDQkdhWEpsWm05NExDQmhibVFnVTJGbVlYSnBMbHh5WEc0Z0lDb3ZYSEpjYmlCY2NseHVJR2d4SUh0Y2NseHVJQ0FnWm05dWRDMXphWHBsT2lBeVpXMDdYSEpjYmlBZ0lHMWhjbWRwYmpvZ01DNDJOMlZ0SURBN1hISmNiaUI5WEhKY2JpQmNjbHh1SUM4cUlFZHliM1Z3YVc1bklHTnZiblJsYm5SY2NseHVJQ0FnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYSEpjYmlCY2NseHVJQzhxS2x4eVhHNGdJQ29nTVM0Z1FXUmtJSFJvWlNCamIzSnlaV04wSUdKdmVDQnphWHBwYm1jZ2FXNGdSbWx5WldadmVDNWNjbHh1SUNBcUlESXVJRk5vYjNjZ2RHaGxJRzkyWlhKbWJHOTNJR2x1SUVWa1oyVWdZVzVrSUVsRkxseHlYRzRnSUNvdlhISmNiaUJjY2x4dUlHaHlJSHRjY2x4dUlDQWdZbTk0TFhOcGVtbHVaem9nWTI5dWRHVnVkQzFpYjNnN0lDOHFJREVnS2k5Y2NseHVJQ0FnYUdWcFoyaDBPaUF3T3lBdktpQXhJQ292WEhKY2JpQWdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxPeUF2S2lBeUlDb3ZYSEpjYmlCOVhISmNiaUJjY2x4dUlDOHFLbHh5WEc0Z0lDb2dNUzRnUTI5eWNtVmpkQ0IwYUdVZ2FXNW9aWEpwZEdGdVkyVWdZVzVrSUhOallXeHBibWNnYjJZZ1ptOXVkQ0J6YVhwbElHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2NseHVJQ0FxSURJdUlFTnZjbkpsWTNRZ2RHaGxJRzlrWkNCZ1pXMWdJR1p2Ym5RZ2MybDZhVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjY2x4dUlDQXFMMXh5WEc0Z1hISmNiaUJ3Y21VZ2UxeHlYRzRnSUNCbWIyNTBMV1poYldsc2VUb2diVzl1YjNOd1lXTmxMQ0J0YjI1dmMzQmhZMlU3SUM4cUlERWdLaTljY2x4dUlDQWdabTl1ZEMxemFYcGxPaUF4WlcwN0lDOHFJRElnS2k5Y2NseHVJSDFjY2x4dUlGeHlYRzRnTHlvZ1ZHVjRkQzFzWlhabGJDQnpaVzFoYm5ScFkzTmNjbHh1SUNBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEhKY2JpQmNjbHh1SUM4cUtseHlYRzRnSUNvZ1VtVnRiM1psSUhSb1pTQm5jbUY1SUdKaFkydG5jbTkxYm1RZ2IyNGdZV04wYVhabElHeHBibXR6SUdsdUlFbEZJREV3TGx4eVhHNGdJQ292WEhKY2JpQmNjbHh1SUdFZ2UxeHlYRzRnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNjbHh1SUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh5WEc0Z2ZWeHlYRzRnWEhKY2JpQXZLaXBjY2x4dUlDQXFJREV1SUZKbGJXOTJaU0IwYUdVZ1ltOTBkRzl0SUdKdmNtUmxjaUJwYmlCRGFISnZiV1VnTlRjdFhISmNiaUFnS2lBeUxpQkJaR1FnZEdobElHTnZjbkpsWTNRZ2RHVjRkQ0JrWldOdmNtRjBhVzl1SUdsdUlFTm9jbTl0WlN3Z1JXUm5aU3dnU1VVc0lFOXdaWEpoTENCaGJtUWdVMkZtWVhKcExseHlYRzRnSUNvdlhISmNiaUJjY2x4dUlHRmlZbkpiZEdsMGJHVmRJSHRjY2x4dUlDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ2JtOXVaVHNnTHlvZ01TQXFMMXh5WEc0Z0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklIVnVaR1Z5YkdsdVpUc2dMeW9nTWlBcUwxeHlYRzRnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlNCa2IzUjBaV1E3SUM4cUlESWdLaTljY2x4dUlIMWNjbHh1SUZ4eVhHNGdMeW9xWEhKY2JpQWdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdabTl1ZENCM1pXbG5hSFFnYVc0Z1EyaHliMjFsTENCRlpHZGxMQ0JoYm1RZ1UyRm1ZWEpwTGx4eVhHNGdJQ292WEhKY2JpQmNjbHh1SUdJc1hISmNiaUJ6ZEhKdmJtY2dlMXh5WEc0Z0lDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pHVnlPMXh5WEc0Z2ZWeHlYRzRnWEhKY2JpQXZLaXBjY2x4dUlDQXFJREV1SUVOdmNuSmxZM1FnZEdobElHbHVhR1Z5YVhSaGJtTmxJR0Z1WkNCelkyRnNhVzVuSUc5bUlHWnZiblFnYzJsNlpTQnBiaUJoYkd3Z1luSnZkM05sY25NdVhISmNiaUFnS2lBeUxpQkRiM0p5WldOMElIUm9aU0J2WkdRZ1lHVnRZQ0JtYjI1MElITnBlbWx1WnlCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEhKY2JpQWdLaTljY2x4dUlGeHlYRzRnWTI5a1pTeGNjbHh1SUd0aVpDeGNjbHh1SUhOaGJYQWdlMXh5WEc0Z0lDQm1iMjUwTFdaaGJXbHNlVG9nYlc5dWIzTndZV05sTENCdGIyNXZjM0JoWTJVN0lDOHFJREVnS2k5Y2NseHVJQ0FnWm05dWRDMXphWHBsT2lBeFpXMDdJQzhxSURJZ0tpOWNjbHh1SUgxY2NseHVJRnh5WEc0Z0x5b3FYSEpjYmlBZ0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1ptOXVkQ0J6YVhwbElHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2NseHVJQ0FxTDF4eVhHNGdYSEpjYmlCemJXRnNiQ0I3WEhKY2JpQWdJR1p2Ym5RdGMybDZaVG9nT0RBbE8xeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlGQnlaWFpsYm5RZ1lITjFZbUFnWVc1a0lHQnpkWEJnSUdWc1pXMWxiblJ6SUdaeWIyMGdZV1ptWldOMGFXNW5JSFJvWlNCc2FXNWxJR2hsYVdkb2RDQnBibHh5WEc0Z0lDb2dZV3hzSUdKeWIzZHpaWEp6TGx4eVhHNGdJQ292WEhKY2JpQmNjbHh1SUhOMVlpeGNjbHh1SUhOMWNDQjdYSEpjYmlBZ0lHWnZiblF0YzJsNlpUb2dOelVsTzF4eVhHNGdJQ0JzYVc1bExXaGxhV2RvZERvZ01EdGNjbHh1SUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzRnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW1GelpXeHBibVU3WEhKY2JpQjlYSEpjYmlCY2NseHVJSE4xWWlCN1hISmNiaUFnSUdKdmRIUnZiVG9nTFRBdU1qVmxiVHRjY2x4dUlIMWNjbHh1SUZ4eVhHNGdjM1Z3SUh0Y2NseHVJQ0FnZEc5d09pQXRNQzQxWlcwN1hISmNiaUI5WEhKY2JpQmNjbHh1SUM4cUlFVnRZbVZrWkdWa0lHTnZiblJsYm5SY2NseHVJQ0FnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYSEpjYmlCY2NseHVJQzhxS2x4eVhHNGdJQ29nVW1WdGIzWmxJSFJvWlNCaWIzSmtaWElnYjI0Z2FXMWhaMlZ6SUdsdWMybGtaU0JzYVc1cmN5QnBiaUJKUlNBeE1DNWNjbHh1SUNBcUwxeHlYRzRnWEhKY2JpQnBiV2NnZTF4eVhHNGdJQ0JpYjNKa1pYSXRjM1I1YkdVNklHNXZibVU3WEhKY2JpQWdJSGRwWkhSb09pQXhNREFsTzF4eVhHNGdmVnh5WEc0Z1hISmNiaUF2S2lCR2IzSnRjMXh5WEc0Z0lDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2NseHVJRnh5WEc0Z0x5b3FYSEpjYmlBZ0tpQXhMaUJEYUdGdVoyVWdkR2hsSUdadmJuUWdjM1I1YkdWeklHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2NseHVJQ0FxSURJdUlGSmxiVzkyWlNCMGFHVWdiV0Z5WjJsdUlHbHVJRVpwY21WbWIzZ2dZVzVrSUZOaFptRnlhUzVjY2x4dUlDQXFMMXh5WEc0Z1hISmNiaUJpZFhSMGIyNHNYSEpjYmlCcGJuQjFkQ3hjY2x4dUlHOXdkR2R5YjNWd0xGeHlYRzRnYzJWc1pXTjBMRnh5WEc0Z2RHVjRkR0Z5WldFZ2UxeHlYRzRnSUNCbWIyNTBMV1poYldsc2VUb2dhVzVvWlhKcGREc2dMeW9nTVNBcUwxeHlYRzRnSUNCbWIyNTBMWE5wZW1VNklERXdNQ1U3SUM4cUlERWdLaTljY2x4dUlDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1UVTdJQzhxSURFZ0tpOWNjbHh1SUNBZ2JXRnlaMmx1T2lBd095QXZLaUF5SUNvdlhISmNiaUI5WEhKY2JpQmNjbHh1SUM4cUtseHlYRzRnSUNvZ1UyaHZkeUIwYUdVZ2IzWmxjbVpzYjNjZ2FXNGdTVVV1WEhKY2JpQWdLaUF4TGlCVGFHOTNJSFJvWlNCdmRtVnlabXh2ZHlCcGJpQkZaR2RsTGx4eVhHNGdJQ292WEhKY2JpQmNjbHh1SUdKMWRIUnZiaXhjY2x4dUlHbHVjSFYwSUhzZ0x5b2dNU0FxTDF4eVhHNGdJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjY2x4dUlIMWNjbHh1SUZ4eVhHNGdMeW9xWEhKY2JpQWdLaUJTWlcxdmRtVWdkR2hsSUdsdWFHVnlhWFJoYm1ObElHOW1JSFJsZUhRZ2RISmhibk5tYjNKdElHbHVJRVZrWjJVc0lFWnBjbVZtYjNnc0lHRnVaQ0JKUlM1Y2NseHVJQ0FxSURFdUlGSmxiVzkyWlNCMGFHVWdhVzVvWlhKcGRHRnVZMlVnYjJZZ2RHVjRkQ0IwY21GdWMyWnZjbTBnYVc0Z1JtbHlaV1p2ZUM1Y2NseHVJQ0FxTDF4eVhHNGdYSEpjYmlCaWRYUjBiMjRzWEhKY2JpQnpaV3hsWTNRZ2V5QXZLaUF4SUNvdlhISmNiaUFnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUJ1YjI1bE8xeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlFTnZjbkpsWTNRZ2RHaGxJR2x1WVdKcGJHbDBlU0IwYnlCemRIbHNaU0JqYkdsamEyRmliR1VnZEhsd1pYTWdhVzRnYVU5VElHRnVaQ0JUWVdaaGNta3VYSEpjYmlBZ0tpOWNjbHh1SUZ4eVhHNGdZblYwZEc5dUxGeHlYRzRnVzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDBzWEhKY2JpQmJkSGx3WlQxY0luSmxjMlYwWENKZExGeHlYRzRnVzNSNWNHVTlYQ0p6ZFdKdGFYUmNJbDBnZTF4eVhHNGdJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUdKMWRIUnZianRjY2x4dUlIMWNjbHh1SUZ4eVhHNGdMeW9xWEhKY2JpQWdLaUJTWlcxdmRtVWdkR2hsSUdsdWJtVnlJR0p2Y21SbGNpQmhibVFnY0dGa1pHbHVaeUJwYmlCR2FYSmxabTk0TGx4eVhHNGdJQ292WEhKY2JpQmNjbHh1SUdKMWRIUnZiam82TFcxdmVpMW1iMk4xY3kxcGJtNWxjaXhjY2x4dUlGdDBlWEJsUFZ3aVluVjBkRzl1WENKZE9qb3RiVzk2TFdadlkzVnpMV2x1Ym1WeUxGeHlYRzRnVzNSNWNHVTlYQ0p5WlhObGRGd2lYVG82TFcxdmVpMW1iMk4xY3kxcGJtNWxjaXhjY2x4dUlGdDBlWEJsUFZ3aWMzVmliV2wwWENKZE9qb3RiVzk2TFdadlkzVnpMV2x1Ym1WeUlIdGNjbHh1SUNBZ1ltOXlaR1Z5TFhOMGVXeGxPaUJ1YjI1bE8xeHlYRzRnSUNCd1lXUmthVzVuT2lBd08xeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlGSmxjM1J2Y21VZ2RHaGxJR1p2WTNWeklITjBlV3hsY3lCMWJuTmxkQ0JpZVNCMGFHVWdjSEpsZG1sdmRYTWdjblZzWlM1Y2NseHVJQ0FxTDF4eVhHNGdYSEpjYmlCaWRYUjBiMjQ2TFcxdmVpMW1iMk4xYzNKcGJtY3NYSEpjYmlCYmRIbHdaVDFjSW1KMWRIUnZibHdpWFRvdGJXOTZMV1p2WTNWemNtbHVaeXhjY2x4dUlGdDBlWEJsUFZ3aWNtVnpaWFJjSWwwNkxXMXZlaTFtYjJOMWMzSnBibWNzWEhKY2JpQmJkSGx3WlQxY0luTjFZbTFwZEZ3aVhUb3RiVzk2TFdadlkzVnpjbWx1WnlCN1hISmNiaUFnSUc5MWRHeHBibVU2SURGd2VDQmtiM1IwWldRZ1FuVjBkRzl1VkdWNGREdGNjbHh1SUgxY2NseHVJRnh5WEc0Z0x5b3FYSEpjYmlBZ0tpQkRiM0p5WldOMElIUm9aU0J3WVdSa2FXNW5JR2x1SUVacGNtVm1iM2d1WEhKY2JpQWdLaTljY2x4dUlGeHlYRzRnWm1sbGJHUnpaWFFnZTF4eVhHNGdJQ0J3WVdSa2FXNW5PaUF3TGpNMVpXMGdNQzQzTldWdElEQXVOakkxWlcwN1hISmNiaUI5WEhKY2JpQmNjbHh1SUM4cUtseHlYRzRnSUNvZ01TNGdRMjl5Y21WamRDQjBhR1VnZEdWNGRDQjNjbUZ3Y0dsdVp5QnBiaUJGWkdkbElHRnVaQ0JKUlM1Y2NseHVJQ0FxSURJdUlFTnZjbkpsWTNRZ2RHaGxJR052Ykc5eUlHbHVhR1Z5YVhSaGJtTmxJR1p5YjIwZ1lHWnBaV3hrYzJWMFlDQmxiR1Z0Wlc1MGN5QnBiaUJKUlM1Y2NseHVJQ0FxSURNdUlGSmxiVzkyWlNCMGFHVWdjR0ZrWkdsdVp5QnpieUJrWlhabGJHOXdaWEp6SUdGeVpTQnViM1FnWTJGMVoyaDBJRzkxZENCM2FHVnVJSFJvWlhrZ2VtVnlieUJ2ZFhSY2NseHVJQ0FxSUNBZ0lHQm1hV1ZzWkhObGRHQWdaV3hsYldWdWRITWdhVzRnWVd4c0lHSnliM2R6WlhKekxseHlYRzRnSUNvdlhISmNiaUJjY2x4dUlHeGxaMlZ1WkNCN1hISmNiaUFnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdJQzhxSURFZ0tpOWNjbHh1SUNBZ1kyOXNiM0k2SUdsdWFHVnlhWFE3SUM4cUlESWdLaTljY2x4dUlDQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVN0lDOHFJREVnS2k5Y2NseHVJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPeUF2S2lBeElDb3ZYSEpjYmlBZ0lIQmhaR1JwYm1jNklEQTdJQzhxSURNZ0tpOWNjbHh1SUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2Y20xaGJEc2dMeW9nTVNBcUwxeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCMlpYSjBhV05oYkNCaGJHbG5ibTFsYm5RZ2FXNGdRMmh5YjIxbExDQkdhWEpsWm05NExDQmhibVFnVDNCbGNtRXVYSEpjYmlBZ0tpOWNjbHh1SUZ4eVhHNGdjSEp2WjNKbGMzTWdlMXh5WEc0Z0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hISmNiaUI5WEhKY2JpQmNjbHh1SUM4cUtseHlYRzRnSUNvZ1VtVnRiM1psSUhSb1pTQmtaV1poZFd4MElIWmxjblJwWTJGc0lITmpjbTlzYkdKaGNpQnBiaUJKUlNBeE1Dc3VYSEpjYmlBZ0tpOWNjbHh1SUZ4eVhHNGdkR1Y0ZEdGeVpXRWdlMXh5WEc0Z0lDQnZkbVZ5Wm14dmR6b2dZWFYwYnp0Y2NseHVJSDFjY2x4dUlGeHlYRzRnTHlvcVhISmNiaUFnS2lBeExpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1ltOTRJSE5wZW1sdVp5QnBiaUJKUlNBeE1DNWNjbHh1SUNBcUlESXVJRkpsYlc5MlpTQjBhR1VnY0dGa1pHbHVaeUJwYmlCSlJTQXhNQzVjY2x4dUlDQXFMMXh5WEc0Z1hISmNiaUJiZEhsd1pUMWNJbU5vWldOclltOTRYQ0pkTEZ4eVhHNGdXM1I1Y0dVOVhDSnlZV1JwYjF3aVhTQjdYSEpjYmlBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3SUM4cUlERWdLaTljY2x4dUlDQWdjR0ZrWkdsdVp6b2dNRHNnTHlvZ01pQXFMMXh5WEc0Z2ZWeHlYRzRnWEhKY2JpQXZLaXBjY2x4dUlDQXFJRU52Y25KbFkzUWdkR2hsSUdOMWNuTnZjaUJ6ZEhsc1pTQnZaaUJwYm1OeVpXMWxiblFnWVc1a0lHUmxZM0psYldWdWRDQmlkWFIwYjI1eklHbHVJRU5vY205dFpTNWNjbHh1SUNBcUwxeHlYRzRnWEhKY2JpQmJkSGx3WlQxY0ltNTFiV0psY2x3aVhUbzZMWGRsWW10cGRDMXBibTVsY2kxemNHbHVMV0oxZEhSdmJpeGNjbHh1SUZ0MGVYQmxQVndpYm5WdFltVnlYQ0pkT2pvdGQyVmlhMmwwTFc5MWRHVnlMWE53YVc0dFluVjBkRzl1SUh0Y2NseHVJQ0FnYUdWcFoyaDBPaUJoZFhSdk8xeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlERXVJRU52Y25KbFkzUWdkR2hsSUc5a1pDQmhjSEJsWVhKaGJtTmxJR2x1SUVOb2NtOXRaU0JoYm1RZ1UyRm1ZWEpwTGx4eVhHNGdJQ29nTWk0Z1EyOXljbVZqZENCMGFHVWdiM1YwYkdsdVpTQnpkSGxzWlNCcGJpQlRZV1poY21rdVhISmNiaUFnS2k5Y2NseHVJRnh5WEc0Z1czUjVjR1U5WENKelpXRnlZMmhjSWwwZ2UxeHlYRzRnSUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklIUmxlSFJtYVdWc1pEc2dMeW9nTVNBcUwxeHlYRzRnSUNCdmRYUnNhVzVsTFc5bVpuTmxkRG9nTFRKd2VEc2dMeW9nTWlBcUwxeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlGSmxiVzkyWlNCMGFHVWdhVzV1WlhJZ2NHRmtaR2x1WnlCcGJpQkRhSEp2YldVZ1lXNWtJRk5oWm1GeWFTQnZiaUJ0WVdOUFV5NWNjbHh1SUNBcUwxeHlYRzRnWEhKY2JpQmJkSGx3WlQxY0luTmxZWEpqYUZ3aVhUbzZMWGRsWW10cGRDMXpaV0Z5WTJndFpHVmpiM0poZEdsdmJpQjdYSEpjYmlBZ0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dibTl1WlR0Y2NseHVJSDFjY2x4dUlGeHlYRzRnTHlvcVhISmNiaUFnS2lBeExpQkRiM0p5WldOMElIUm9aU0JwYm1GaWFXeHBkSGtnZEc4Z2MzUjViR1VnWTJ4cFkydGhZbXhsSUhSNWNHVnpJR2x1SUdsUFV5QmhibVFnVTJGbVlYSnBMbHh5WEc0Z0lDb2dNaTRnUTJoaGJtZGxJR1p2Ym5RZ2NISnZjR1Z5ZEdsbGN5QjBieUJnYVc1b1pYSnBkR0FnYVc0Z1UyRm1ZWEpwTGx4eVhHNGdJQ292WEhKY2JpQmNjbHh1SURvNkxYZGxZbXRwZEMxbWFXeGxMWFZ3Ykc5aFpDMWlkWFIwYjI0Z2UxeHlYRzRnSUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHSjFkSFJ2YmpzZ0x5b2dNU0FxTDF4eVhHNGdJQ0JtYjI1ME9pQnBibWhsY21sME95QXZLaUF5SUNvdlhISmNiaUI5WEhKY2JpQmNjbHh1SUM4cUlFbHVkR1Z5WVdOMGFYWmxYSEpjYmlBZ0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4eVhHNGdYSEpjYmlBdktseHlYRzRnSUNvZ1FXUmtJSFJvWlNCamIzSnlaV04wSUdScGMzQnNZWGtnYVc0Z1JXUm5aU3dnU1VVZ01UQXJMQ0JoYm1RZ1JtbHlaV1p2ZUM1Y2NseHVJQ0FxTDF4eVhHNGdYSEpjYmlCa1pYUmhhV3h6SUh0Y2NseHVJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlCOVhISmNiaUJjY2x4dUlDOHFYSEpjYmlBZ0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1pHbHpjR3hoZVNCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEhKY2JpQWdLaTljY2x4dUlGeHlYRzRnYzNWdGJXRnllU0I3WEhKY2JpQWdJR1JwYzNCc1lYazZJR3hwYzNRdGFYUmxiVHRjY2x4dUlIMWNjbHh1SUZ4eVhHNGdMeW9nVFdselkxeHlYRzRnSUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljY2x4dUlGeHlYRzRnTHlvcVhISmNiaUFnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTQXhNQ3N1WEhKY2JpQWdLaTljY2x4dUlGeHlYRzRnZEdWdGNHeGhkR1VnZTF4eVhHNGdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzRnZlZ4eVhHNGdYSEpjYmlBdktpcGNjbHh1SUNBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCa2FYTndiR0Y1SUdsdUlFbEZJREV3TGx4eVhHNGdJQ292WEhKY2JpQmNjbHh1SUZ0b2FXUmtaVzVkSUh0Y2NseHVJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNjbHh1SUgwaUxDSXZLaUVnYm05eWJXRnNhWHBsTG1OemN5QjJPQzR3TGpFZ2ZDQk5TVlFnVEdsalpXNXpaU0I4SUdkcGRHaDFZaTVqYjIwdmJtVmpiMnhoY3k5dWIzSnRZV3hwZW1VdVkzTnpJQ292WEc0dktpQkViMk4xYldWdWRGeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNiaThxS2x4dUlDb2dNUzRnUTI5eWNtVmpkQ0IwYUdVZ2JHbHVaU0JvWldsbmFIUWdhVzRnWVd4c0lHSnliM2R6WlhKekxseHVJQ29nTWk0Z1VISmxkbVZ1ZENCaFpHcDFjM1J0Wlc1MGN5QnZaaUJtYjI1MElITnBlbVVnWVdaMFpYSWdiM0pwWlc1MFlYUnBiMjRnWTJoaGJtZGxjeUJwYmlCcFQxTXVYRzRnS2k5Y2JtaDBiV3dnZTF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVM0eE5UdGNiaUFnTHlvZ01TQXFMMXh1SUNBdGQyVmlhMmwwTFhSbGVIUXRjMmw2WlMxaFpHcDFjM1E2SURFd01DVTdYRzRnSUM4cUlESWdLaTljYm4xY2JseHVMeW9nVTJWamRHbHZibk5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc0dktpcGNiaUFxSUZKbGJXOTJaU0IwYUdVZ2JXRnlaMmx1SUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVZbTlrZVNCN1hHNGdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVMeW9xWEc0Z0tpQlNaVzVrWlhJZ2RHaGxJR0J0WVdsdVlDQmxiR1Z0Wlc1MElHTnZibk5wYzNSbGJuUnNlU0JwYmlCSlJTNWNiaUFxTDF4dWJXRnBiaUI3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dWZWeHVYRzR2S2lwY2JpQXFJRU52Y25KbFkzUWdkR2hsSUdadmJuUWdjMmw2WlNCaGJtUWdiV0Z5WjJsdUlHOXVJR0JvTVdBZ1pXeGxiV1Z1ZEhNZ2QybDBhR2x1SUdCelpXTjBhVzl1WUNCaGJtUmNiaUFxSUdCaGNuUnBZMnhsWUNCamIyNTBaWGgwY3lCcGJpQkRhSEp2YldVc0lFWnBjbVZtYjNnc0lHRnVaQ0JUWVdaaGNta3VYRzRnS2k5Y2JtZ3hJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlaVzA3WEc0Z0lHMWhjbWRwYmpvZ01DNDJOMlZ0SURBN1hHNTlYRzVjYmk4cUlFZHliM1Z3YVc1bklHTnZiblJsYm5SY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNHZLaXBjYmlBcUlERXVJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmliM2dnYzJsNmFXNW5JR2x1SUVacGNtVm1iM2d1WEc0Z0tpQXlMaUJUYUc5M0lIUm9aU0J2ZG1WeVpteHZkeUJwYmlCRlpHZGxJR0Z1WkNCSlJTNWNiaUFxTDF4dWFISWdlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHRjYmlBZ0x5b2dNU0FxTDF4dUlDQm9aV2xuYUhRNklEQTdYRzRnSUM4cUlERWdLaTljYmlBZ2IzWmxjbVpzYjNjNklIWnBjMmxpYkdVN1hHNGdJQzhxSURJZ0tpOWNibjFjYmx4dUx5b3FYRzRnS2lBeExpQkRiM0p5WldOMElIUm9aU0JwYm1obGNtbDBZVzVqWlNCaGJtUWdjMk5oYkdsdVp5QnZaaUJtYjI1MElITnBlbVVnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNvZ01pNGdRMjl5Y21WamRDQjBhR1VnYjJSa0lHQmxiV0FnWm05dWRDQnphWHBwYm1jZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4dUlDb3ZYRzV3Y21VZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ2JXOXViM053WVdObExDQnRiMjV2YzNCaFkyVTdYRzRnSUM4cUlERWdLaTljYmlBZ1ptOXVkQzF6YVhwbE9pQXhaVzA3WEc0Z0lDOHFJRElnS2k5Y2JuMWNibHh1THlvZ1ZHVjRkQzFzWlhabGJDQnpaVzFoYm5ScFkzTmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnWjNKaGVTQmlZV05yWjNKdmRXNWtJRzl1SUdGamRHbDJaU0JzYVc1cmN5QnBiaUJKUlNBeE1DNWNiaUFxTDF4dVlTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNTlYRzVjYmk4cUtseHVJQ29nTVM0Z1VtVnRiM1psSUhSb1pTQmliM1IwYjIwZ1ltOXlaR1Z5SUdsdUlFTm9jbTl0WlNBMU55MWNiaUFxSURJdUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCMFpYaDBJR1JsWTI5eVlYUnBiMjRnYVc0Z1EyaHliMjFsTENCRlpHZGxMQ0JKUlN3Z1QzQmxjbUVzSUdGdVpDQlRZV1poY21rdVhHNGdLaTljYm1GaVluSmJkR2wwYkdWZElIdGNiaUFnWW05eVpHVnlMV0p2ZEhSdmJUb2dibTl1WlR0Y2JpQWdMeW9nTVNBcUwxeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaVHRjYmlBZ0x5b2dNaUFxTDF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklIVnVaR1Z5YkdsdVpTQmtiM1IwWldRN1hHNGdJQzhxSURJZ0tpOWNibjFjYmx4dUx5b3FYRzRnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWm05dWRDQjNaV2xuYUhRZ2FXNGdRMmh5YjIxbExDQkZaR2RsTENCaGJtUWdVMkZtWVhKcExseHVJQ292WEc1aUxGeHVjM1J5YjI1bklIdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHSnZiR1JsY2p0Y2JuMWNibHh1THlvcVhHNGdLaUF4TGlCRGIzSnlaV04wSUhSb1pTQnBibWhsY21sMFlXNWpaU0JoYm1RZ2MyTmhiR2x1WnlCdlppQm1iMjUwSUhOcGVtVWdhVzRnWVd4c0lHSnliM2R6WlhKekxseHVJQ29nTWk0Z1EyOXljbVZqZENCMGFHVWdiMlJrSUdCbGJXQWdabTl1ZENCemFYcHBibWNnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNvdlhHNWpiMlJsTEZ4dWEySmtMRnh1YzJGdGNDQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQnRiMjV2YzNCaFkyVXNJRzF2Ym05emNHRmpaVHRjYmlBZ0x5b2dNU0FxTDF4dUlDQm1iMjUwTFhOcGVtVTZJREZsYlR0Y2JpQWdMeW9nTWlBcUwxeHVmVnh1WEc0dktpcGNiaUFxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JtYjI1MElITnBlbVVnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNvdlhHNXpiV0ZzYkNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nT0RBbE8xeHVmVnh1WEc0dktpcGNiaUFxSUZCeVpYWmxiblFnWUhOMVltQWdZVzVrSUdCemRYQmdJR1ZzWlcxbGJuUnpJR1p5YjIwZ1lXWm1aV04wYVc1bklIUm9aU0JzYVc1bElHaGxhV2RvZENCcGJseHVJQ29nWVd4c0lHSnliM2R6WlhKekxseHVJQ292WEc1emRXSXNYRzV6ZFhBZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURjMUpUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklEQTdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE8xeHVmVnh1WEc1emRXSWdlMXh1SUNCaWIzUjBiMjA2SUMwd0xqSTFaVzA3WEc1OVhHNWNibk4xY0NCN1hHNGdJSFJ2Y0RvZ0xUQXVOV1Z0TzF4dWZWeHVYRzR2S2lCRmJXSmxaR1JsWkNCamIyNTBaVzUwWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dUx5b3FYRzRnS2lCU1pXMXZkbVVnZEdobElHSnZjbVJsY2lCdmJpQnBiV0ZuWlhNZ2FXNXphV1JsSUd4cGJtdHpJR2x1SUVsRklERXdMbHh1SUNvdlhHNXBiV2NnZTF4dUlDQmliM0prWlhJdGMzUjViR1U2SUc1dmJtVTdYRzRnSUhkcFpIUm9PaUF4TURBbE8xeHVmVnh1WEc0dktpQkdiM0p0YzF4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JpOHFLbHh1SUNvZ01TNGdRMmhoYm1kbElIUm9aU0JtYjI1MElITjBlV3hsY3lCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpQXlMaUJTWlcxdmRtVWdkR2hsSUcxaGNtZHBiaUJwYmlCR2FYSmxabTk0SUdGdVpDQlRZV1poY21rdVhHNGdLaTljYm1KMWRIUnZiaXhjYm1sdWNIVjBMRnh1YjNCMFozSnZkWEFzWEc1elpXeGxZM1FzWEc1MFpYaDBZWEpsWVNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCcGJtaGxjbWwwTzF4dUlDQXZLaUF4SUNvdlhHNGdJR1p2Ym5RdGMybDZaVG9nTVRBd0pUdGNiaUFnTHlvZ01TQXFMMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzR4TlR0Y2JpQWdMeW9nTVNBcUwxeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lDOHFJRElnS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJUYUc5M0lIUm9aU0J2ZG1WeVpteHZkeUJwYmlCSlJTNWNiaUFxSURFdUlGTm9iM2NnZEdobElHOTJaWEptYkc5M0lHbHVJRVZrWjJVdVhHNGdLaTljYm1KMWRIUnZiaXhjYm1sdWNIVjBJSHRjYmlBZ0x5b2dNU0FxTDF4dUlDQnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pUdGNibjFjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnZEdobElHbHVhR1Z5YVhSaGJtTmxJRzltSUhSbGVIUWdkSEpoYm5ObWIzSnRJR2x1SUVWa1oyVXNJRVpwY21WbWIzZ3NJR0Z1WkNCSlJTNWNiaUFxSURFdUlGSmxiVzkyWlNCMGFHVWdhVzVvWlhKcGRHRnVZMlVnYjJZZ2RHVjRkQ0IwY21GdWMyWnZjbTBnYVc0Z1JtbHlaV1p2ZUM1Y2JpQXFMMXh1WW5WMGRHOXVMRnh1YzJWc1pXTjBJSHRjYmlBZ0x5b2dNU0FxTDF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkRiM0p5WldOMElIUm9aU0JwYm1GaWFXeHBkSGtnZEc4Z2MzUjViR1VnWTJ4cFkydGhZbXhsSUhSNWNHVnpJR2x1SUdsUFV5QmhibVFnVTJGbVlYSnBMbHh1SUNvdlhHNWlkWFIwYjI0c1hHNWJkSGx3WlQxaWRYUjBiMjVkTEZ4dVczUjVjR1U5Y21WelpYUmRMRnh1VzNSNWNHVTljM1ZpYldsMFhTQjdYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ1luVjBkRzl1TzF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnYVc1dVpYSWdZbTl5WkdWeUlHRnVaQ0J3WVdSa2FXNW5JR2x1SUVacGNtVm1iM2d1WEc0Z0tpOWNibUoxZEhSdmJqbzZMVzF2ZWkxbWIyTjFjeTFwYm01bGNpeGNibHQwZVhCbFBXSjFkSFJ2YmwwNk9pMXRiM290Wm05amRYTXRhVzV1WlhJc1hHNWJkSGx3WlQxeVpYTmxkRjA2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElzWEc1YmRIbHdaVDF6ZFdKdGFYUmRPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlJSHRjYmlBZ1ltOXlaR1Z5TFhOMGVXeGxPaUJ1YjI1bE8xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsYzNSdmNtVWdkR2hsSUdadlkzVnpJSE4wZVd4bGN5QjFibk5sZENCaWVTQjBhR1VnY0hKbGRtbHZkWE1nY25Wc1pTNWNiaUFxTDF4dVluVjBkRzl1T2kxdGIzb3RabTlqZFhOeWFXNW5MRnh1VzNSNWNHVTlZblYwZEc5dVhUb3RiVzk2TFdadlkzVnpjbWx1Wnl4Y2JsdDBlWEJsUFhKbGMyVjBYVG90Ylc5NkxXWnZZM1Z6Y21sdVp5eGNibHQwZVhCbFBYTjFZbTFwZEYwNkxXMXZlaTFtYjJOMWMzSnBibWNnZTF4dUlDQnZkWFJzYVc1bE9pQXhjSGdnWkc5MGRHVmtJRUoxZEhSdmJsUmxlSFE3WEc1OVhHNWNiaThxS2x4dUlDb2dRMjl5Y21WamRDQjBhR1VnY0dGa1pHbHVaeUJwYmlCR2FYSmxabTk0TGx4dUlDb3ZYRzVtYVdWc1pITmxkQ0I3WEc0Z0lIQmhaR1JwYm1jNklEQXVNelZsYlNBd0xqYzFaVzBnTUM0Mk1qVmxiVHRjYm4xY2JseHVMeW9xWEc0Z0tpQXhMaUJEYjNKeVpXTjBJSFJvWlNCMFpYaDBJSGR5WVhCd2FXNW5JR2x1SUVWa1oyVWdZVzVrSUVsRkxseHVJQ29nTWk0Z1EyOXljbVZqZENCMGFHVWdZMjlzYjNJZ2FXNW9aWEpwZEdGdVkyVWdabkp2YlNCZ1ptbGxiR1J6WlhSZ0lHVnNaVzFsYm5SeklHbHVJRWxGTGx4dUlDb2dNeTRnVW1WdGIzWmxJSFJvWlNCd1lXUmthVzVuSUhOdklHUmxkbVZzYjNCbGNuTWdZWEpsSUc1dmRDQmpZWFZuYUhRZ2IzVjBJSGRvWlc0Z2RHaGxlU0I2WlhKdklHOTFkRnh1SUNvZ0lDQWdZR1pwWld4a2MyVjBZQ0JsYkdWdFpXNTBjeUJwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnS2k5Y2JteGxaMlZ1WkNCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNGdJQzhxSURFZ0tpOWNiaUFnWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzRnSUM4cUlESWdLaTljYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1U3WEc0Z0lDOHFJREVnS2k5Y2JpQWdiV0Y0TFhkcFpIUm9PaUF4TURBbE8xeHVJQ0F2S2lBeElDb3ZYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJQzhxSURNZ0tpOWNiaUFnZDJocGRHVXRjM0JoWTJVNklHNXZjbTFoYkR0Y2JpQWdMeW9nTVNBcUwxeHVmVnh1WEc0dktpcGNiaUFxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0IyWlhKMGFXTmhiQ0JoYkdsbmJtMWxiblFnYVc0Z1EyaHliMjFsTENCR2FYSmxabTk0TENCaGJtUWdUM0JsY21FdVhHNGdLaTljYm5CeWIyZHlaWE56SUh0Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE8xeHVmVnh1WEc0dktpcGNiaUFxSUZKbGJXOTJaU0IwYUdVZ1pHVm1ZWFZzZENCMlpYSjBhV05oYkNCelkzSnZiR3hpWVhJZ2FXNGdTVVVnTVRBckxseHVJQ292WEc1MFpYaDBZWEpsWVNCN1hHNGdJRzkyWlhKbWJHOTNPaUJoZFhSdk8xeHVmVnh1WEc0dktpcGNiaUFxSURFdUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCaWIzZ2djMmw2YVc1bklHbHVJRWxGSURFd0xseHVJQ29nTWk0Z1VtVnRiM1psSUhSb1pTQndZV1JrYVc1bklHbHVJRWxGSURFd0xseHVJQ292WEc1YmRIbHdaVDFqYUdWamEySnZlRjBzWEc1YmRIbHdaVDF5WVdScGIxMGdlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1SUNBdktpQXhJQ292WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUM4cUlESWdLaTljYm4xY2JseHVMeW9xWEc0Z0tpQkRiM0p5WldOMElIUm9aU0JqZFhKemIzSWdjM1I1YkdVZ2IyWWdhVzVqY21WdFpXNTBJR0Z1WkNCa1pXTnlaVzFsYm5RZ1luVjBkRzl1Y3lCcGJpQkRhSEp2YldVdVhHNGdLaTljYmx0MGVYQmxQVzUxYldKbGNsMDZPaTEzWldKcmFYUXRhVzV1WlhJdGMzQnBiaTFpZFhSMGIyNHNYRzViZEhsd1pUMXVkVzFpWlhKZE9qb3RkMlZpYTJsMExXOTFkR1Z5TFhOd2FXNHRZblYwZEc5dUlIdGNiaUFnYUdWcFoyaDBPaUJoZFhSdk8xeHVmVnh1WEc0dktpcGNiaUFxSURFdUlFTnZjbkpsWTNRZ2RHaGxJRzlrWkNCaGNIQmxZWEpoYm1ObElHbHVJRU5vY205dFpTQmhibVFnVTJGbVlYSnBMbHh1SUNvZ01pNGdRMjl5Y21WamRDQjBhR1VnYjNWMGJHbHVaU0J6ZEhsc1pTQnBiaUJUWVdaaGNta3VYRzRnS2k5Y2JsdDBlWEJsUFhObFlYSmphRjBnZTF4dUlDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJSFJsZUhSbWFXVnNaRHRjYmlBZ0x5b2dNU0FxTDF4dUlDQnZkWFJzYVc1bExXOW1abk5sZERvZ0xUSndlRHRjYmlBZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnYVc1dVpYSWdjR0ZrWkdsdVp5QnBiaUJEYUhKdmJXVWdZVzVrSUZOaFptRnlhU0J2YmlCdFlXTlBVeTVjYmlBcUwxeHVXM1I1Y0dVOWMyVmhjbU5vWFRvNkxYZGxZbXRwZEMxelpXRnlZMmd0WkdWamIzSmhkR2x2YmlCN1hHNGdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nYm05dVpUdGNibjFjYmx4dUx5b3FYRzRnS2lBeExpQkRiM0p5WldOMElIUm9aU0JwYm1GaWFXeHBkSGtnZEc4Z2MzUjViR1VnWTJ4cFkydGhZbXhsSUhSNWNHVnpJR2x1SUdsUFV5QmhibVFnVTJGbVlYSnBMbHh1SUNvZ01pNGdRMmhoYm1kbElHWnZiblFnY0hKdmNHVnlkR2xsY3lCMGJ5QmdhVzVvWlhKcGRHQWdhVzRnVTJGbVlYSnBMbHh1SUNvdlhHNDZPaTEzWldKcmFYUXRabWxzWlMxMWNHeHZZV1F0WW5WMGRHOXVJSHRjYmlBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQmlkWFIwYjI0N1hHNGdJQzhxSURFZ0tpOWNiaUFnWm05dWREb2dhVzVvWlhKcGREdGNiaUFnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaUJKYm5SbGNtRmpkR2wyWlZ4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JpOHFYRzRnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCRlpHZGxMQ0JKUlNBeE1Dc3NJR0Z1WkNCR2FYSmxabTk0TGx4dUlDb3ZYRzVrWlhSaGFXeHpJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc1OVhHNWNiaThxWEc0Z0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1pHbHpjR3hoZVNCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpOWNibk4xYlcxaGNua2dlMXh1SUNCa2FYTndiR0Y1T2lCc2FYTjBMV2wwWlcwN1hHNTlYRzVjYmk4cUlFMXBjMk5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc0dktpcGNiaUFxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JrYVhOd2JHRjVJR2x1SUVsRklERXdLeTVjYmlBcUwxeHVkR1Z0Y0d4aGRHVWdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCa2FYTndiR0Y1SUdsdUlFbEZJREV3TGx4dUlDb3ZYRzViYUdsa1pHVnVYU0I3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNWNiaW9zSUNvNk9tRm1kR1Z5TENBcU9qcGlaV1p2Y21VZ2UxeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dWZWeHVYRzUxYkNCN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVZU0I3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzU5WEc1Y2JuQWdlMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0J0WVhKbmFXNDZJREE3WEc1OVhHNWNibUoxZEhSdmJpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklHNXZibVU3WEc0Z0lHOTFkR3hwYm1VNklHNXZibVU3WEc0Z0lHSnZjbVJsY2pvZ2JtOXVaVHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnYldGeVoybHVPaUF3TzF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ1kzVnljMjl5T2lCd2IybHVkR1Z5TzF4dWZWeHVYRzVvTVN3Z2FESXNJR2d6TENCb05Dd2dhRFVzSUdnMklIdGNiaUFnYldGeVoybHVPaUF3TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1ZlZ4dVhHNW9kRzFzSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVRXOXVkSE5sY25KaGRGd2lMQ0J6WVc1ekxYTmxjbWxtTzF4dWZWeHVYRzR1WTI5dWRHRnBibVZ5SUh0Y2JpQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJRzFoZUMxM2FXUjBhRG9nTVRFd01IQjRPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNibjFjYmx4dUxtaGxZV1JsY2lCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNOR09VWTVSams3WEc0Z0lHSnZlQzF6YUdGa2IzYzZJREJ3ZUNBeGNIZ2dObkI0SUhKblltRW9NQ3dnTUN3Z01Dd2dNQzR5TlNrN1hHNTlYRzVjYmk1dVlYWWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJSE53WVdObExXSmxkSGRsWlc0N1hHNGdJR2hsYVdkb2REb2dPREJ3ZUR0Y2JuMWNibHh1TG01aGRpMXNaV1owWDE5c2FYTjBJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnWjJGd09pQXpNSEI0TzF4dWZWeHVMbTVoZGkxc1pXWjBYMTlzYVc1cklIdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEWXdNRHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhNM0I0TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVROd2VEdGNiaUFnWTI5c2IzSTZJQ015TkRJME1qUTdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc1OVhHNWNiaTVvWldGa1pYSXRiRzluYjE5ZmFXMW5JSHRjYmlBZ2QybGtkR2c2SURFek5YQjRPMXh1ZlZ4dVhHNHVhR1ZoWkdWeUxYSnBaMmgwWDE5c2FYTjBJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnWjJGd09pQXpNSEI0TzF4dWZWeHVMbWhsWVdSbGNpMXlhV2RvZEY5ZmJHbHVheUI3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVROd2VEdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXpjSGc3WEc0Z0lHTnZiRzl5T2lBak1qUXlOREkwTzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVmVnh1WEc0dWFHVmhaR2x1WnlCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklEUXdjSGc3WEc1OVhHNHVjMnhwWkdWeUlIdGNiaUFnZDJsa2RHZzZJREV4TURCd2VEdGNiaUFnYUdWcFoyaDBPaUEwTWpCd2VEdGNiaUFnYldGeVoybHVPaUF3SUdGMWRHODdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNibjFjYmk1emJHbGtaWEpmWDJKMGJpQjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkRzl3T2lBMU1DVTdYRzRnSUhvdGFXNWtaWGc2SURFd08xeHVJQ0JvWldsbmFIUTZJRFF3Y0hnN1hHNGdJSGRwWkhSb09pQTBNSEI0TzF4dUlDQmliM2d0YzJoaFpHOTNPaUF4Y0hnZ01YQjRJRFJ3ZUNCeVoySmhLREFzSURBc0lEQXNJREF1TWpVcE8xeHVJQ0JpYjNKa1pYSTZJRzV2Ym1VN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNObVptWTdYRzRnSUc5d1lXTnBkSGs2SURBdU56dGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dOVEFsTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTUM0eWN5QmxZWE5sTFdsdUxXOTFkRHRjYm4xY2JpNXpiR2xrWlhKZlgySjBianBvYjNabGNpQjdYRzRnSUc5d1lXTnBkSGs2SURFN1hHNTlYRzR1YzJ4cFpHVnlYMTlpZEc0NmFHOTJaWElnTG1GeWNtOTNMV3hsWm5RZ2UxeHVJQ0JtYVd4c09pQWpRekF6TURreU8xeHVmVnh1TG5Oc2FXUmxjbDlmWW5SdU9taHZkbVZ5SUM1aGNuSnZkeTF5YVdkb2RDQjdYRzRnSUdacGJHdzZJQ05ETURNd09USTdYRzU5WEc0dWMyeHBaR1Z5WDE5aWRHNHRMV3hsWm5RZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNiaUFnYkdWbWREb2dPQ1U3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0lDMDFNQ1VwTzF4dWZWeHVMbk5zYVdSbGNsOWZZblJ1TFMxeWFXZG9kQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4dUlDQnlhV2RvZERvZ09DVTdYRzRnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbEtEVXdKU3dnTFRVd0pTazdYRzU5WEc1Y2JpNW9aV0ZrYVc1blgxOWlkRzR0WVhKeWIzY2dlMXh1SUNCb1pXbG5hSFE2SURFMWNIZzdYRzRnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZzRNQ1VwTzF4dWZWeHVYRzR1WVhKeWIzY3RiR1ZtZEN3Z0xtRnljbTkzTFhKcFoyaDBJSHRjYmlBZ2FHVnBaMmgwT2lBeE5YQjRPMXh1SUNCbWFXeHNPaUFqT0dJNFlqaGlPMXh1SUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29PREFsS1R0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWm1sc2JDQXdMakp6SUdWaGMyVXRhVzR0YjNWME8xeHVmVnh1WEc0dWMyeHBaR1VnZTF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhSdmNEb2dOREJ3ZUR0Y2JpQWdiR1ZtZERvZ05EQndlRHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYRzRnSUhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXhjenRjYm4xY2JseHVMbk5zYVdSbElENGdhVzFuSUh0Y2JpQWdiV0Z5WjJsdUxYSnBaMmgwT2lBME1IQjRPMXh1SUNCM2FXUjBhRG9nTVRBeU1IQjRPMXh1SUNCb1pXbG5hSFE2SURNME1IQjRPMXh1SUNCdlltcGxZM1F0Wm1sME9pQmpiM1psY2p0Y2JuMWNibHh1TG1SdmRITWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJR0p2ZEhSdmJUb2dNVE1sTzF4dUlDQnNaV1owT2lBMU1DVTdYRzRnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3ROVEFsS1R0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JuMWNibHh1TG1SdmRITmZYMlJ2ZENCN1hHNGdJR0p2Y21SbGNqb2dibTl1WlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMFE1UkRsRU9UdGNiaUFnYjNCaFkybDBlVG9nTUM0M08xeHVJQ0JvWldsbmFIUTZJREV3Y0hnN1hHNGdJSGRwWkhSb09pQXhNSEI0TzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBMU1DVTdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dNVEJ3ZUR0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzQxY3p0Y2JuMWNibHh1TG1SdmRITmZYMlJ2ZERwc1lYTjBMV05vYVd4a0lIdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVYRzR1Wkc5MGMxOWZaRzkwTFMxaFkzUnBkbVVnZTF4dUlDQXZLaUJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abU95QXFMMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1qUXlOREkwTzF4dUlDQnZjR0ZqYVhSNU9pQXhPMXh1ZlZ4dVhHNHVZMkYwWVd4dlp5QjdYRzRnSUhCaFpHUnBibWM2SURnd2NIZ2dNSEI0SURnd2NIZ2dNSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqUmpsR09VWTVPMXh1ZlZ4dUxtTmhkR0ZzYjJkZlgzUmxlSFFnZTF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeU1IQjRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4dUlDQm1iMjUwTFhOcGVtVTZJREk0Y0hnN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeU9IQjRPMXh1SUNCamIyeHZjam9nSXpJME1qUXlORHRjYmlBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JuMWNibHh1TG1OaGRHRnNiMmN0ZEdsMGJHVWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUEwTUhCNE8xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNiaUFnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1ZlZ4dVhHNHVZMkYwWVd4dloxOWZjM1ZpZEdsMGJHVWdlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4dUlDQm1iMjUwTFhOcGVtVTZJREV6Y0hnN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeU9IQjRPMXh1SUNCamIyeHZjam9nSXpoQ09FSTRRanRjYm4xY2JseHVMbU5oY21SeklIdGNiaUFnWkdsemNHeGhlVG9nWjNKcFpEdGNiaUFnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQnlaWEJsWVhRb1lYVjBieTFtYVd4c0xDQXpNakJ3ZUNrN1hHNGdJR2RoY0RvZ056QndlQ0EzTUhCNE8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNibjFjYmx4dUxtTmhjbVJ6TFdsMFpXMWZYMmx0WnlCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERXdjSGc3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURFd2NIZzdYRzU5WEc0dVkyRnlaSE10Y0hKcFkyVWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TUhCNE8xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dWZWeHVMbU5oY21SekxYQnlhV05sWDE5amRYSnlaVzUwSUh0Y2JpQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01UQndlRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2JpQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01qQndlRHRjYmlBZ1kyOXNiM0k2SUNNeU5ESTBNalE3WEc1OVhHNHVZMkZ5WkhNdGNISnBZMlZmWDI5c1pDQjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTJNREE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURCd2VEdGNiaUFnZEdWNGRDMWtaV052Y21GMGFXOXVMV3hwYm1VNklHeHBibVV0ZEdoeWIzVm5hRHRjYmlBZ1kyOXNiM0k2SUNNNFFqaENPRUk3WEc1OVhHNWNiaTVqWVhKa2MxOWZkR2wwYkdVZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhNSEI0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHVJQ0JtYjI1MExYTnBlbVU2SURFMGNIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhOSEI0TzF4dUlDQmpiMnh2Y2pvZ0l6aENPRUk0UWp0Y2JuMWNiaTVqWVhKa2N5MXpkR0Z5Y3lCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERXdjSGc3WEc1OVhHNWNiaTVqWVhKa2N5MWlkWFIwYjI0Z2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEc1OVhHNWNiaTVqWVhKa2N5MWlkRzVmWDJ4bFpuUWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNiaUFnZDJsa2RHZzZJREUxTUhCNE8xeHVJQ0JvWldsbmFIUTZJRFF3Y0hnN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJanRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4Tm5CNE8xeHVJQ0JqYjJ4dmNqb2dJMFpHUmtaR1JqdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2JHbHVaV0Z5TFdkeVlXUnBaVzUwS0Rrd1pHVm5MQ0FqWlRVME1XSXhJREFsTENBalF6QXpNRGt5SURFd01DVXBPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUExY0hnN1hHNTlYRzR1WTJGeVpITXRZblJ1WDE5eWFXZG9kQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1SUNCM2FXUjBhRG9nTVRVd2NIZzdYRzRnSUdobGFXZG9kRG9nTkRCd2VEdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lUVzl1ZEhObGNuSmhkRndpTzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTFNREE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFMmNIZzdYRzRnSUdOdmJHOXlPaUFqUXpVek1qazJPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTlhCNE8xeHVJQ0JpYjNKa1pYSTZJREp3ZUNCemIyeHBaQ0FqUXpBek1Ea3lPMXh1ZlZ4dVhHNHVZV0p2ZFhRZ2UxeHVJQ0J3WVdSa2FXNW5PaUE0TUhCNElEQndlRHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTkRCd2VEdGNibjFjYmk1aFltOTFkRjlmZEdWNGRDMHRjMlZ0YVdKdmJHUWdlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4dWZWeHVMbUZpYjNWMFgxOTBaWGgwTFMxM1lpQjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTJNREE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVE53ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURJNGNIZzdYRzRnSUdOdmJHOXlPaUFqUXpVek1qazJPMXh1SUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlR0Y2JuMWNiaTVoWW05MWRGOWZhVzFoWjJVZ2UxeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1OVhHNHVZV0p2ZFhSZlgzQm9iM1J2TFMxdmJtVWdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dMVFE0Y0hnN1hHNGdJSGRwWkhSb09pQTBNREJ3ZUR0Y2JpQWdhR1ZwWjJoME9pQTFNREJ3ZUR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01UQndlRHRjYm4xY2JpNWhZbTkxZEY5ZmNHaHZkRzh0TFhSM2J5QjdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkRzl3T2lBd2NIZzdYRzRnSUd4bFpuUTZJRGN3Y0hnN1hHNGdJSGRwWkhSb09pQTBNREJ3ZUR0Y2JpQWdhR1ZwWjJoME9pQTFNREJ3ZUR0Y2JpQWdlaTFwYm1SbGVEb2dMVEU3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURFd2NIZzdYRzU5WEc1Y2JpNWhZbTkxZEMxMGFYUnNaU0I3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURZd2NIZzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTJNREE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNamh3ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURJNGNIZzdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJR052Ykc5eU9pQWpNalF5TkRJME8xeHVmVnh1WEc0dVlXSnZkWFF0YVc1bWJ5QjdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQTBNSEI0TzF4dUlDQndZV1JrYVc1bkxXeGxablE2SURRd2NIZzdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJREV4TUhCNE8xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExYZHlZWEE2SUhkeVlYQTdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc1OVhHNWNiaTVoWW05MWRDMWtaWE5qSUh0Y2JpQWdkMmxrZEdnNklEVXdNSEI0TzF4dWZWeHVMbUZpYjNWMExXUmxjMk5mWDNSbGVIUWdlMXh1SUNCMFpYaDBMV2x1WkdWdWREb2dNakJ3ZUR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNiaUFnWm05dWRDMXphWHBsT2lBeE0zQjRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNamh3ZUR0Y2JpQWdZMjlzYjNJNklDTXlOREkwTWpRN1hHNTlYRzVjYmk1aFltOTFkQzFrWlhOalgxOTBaWGgwT201dmRDZzZiR0Z6ZEMxamFHbHNaQ2tnZTF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE5YQjRPMXh1ZlNJc0lpb3NJQ282T21GbWRHVnlMQ0FxT2pwaVpXWnZjbVVnZTF4eVhHNGdJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHlYRzU5WEhKY2JseHlYRzVvZEcxc0lIdGNjbHh1SUNBZ1hISmNibjFjY2x4dVhISmNibUp2WkhrZ2UxeHlYRzRnSUNCdFlYSm5hVzQ2SURBN1hISmNiaUFnSUhCaFpHUnBibWM2SURBN1hISmNibjFjY2x4dVhISmNiblZzSUh0Y2NseHVJQ0FnY0dGa1pHbHVaem9nTUR0Y2NseHVJQ0FnYldGeVoybHVPaUF3TzF4eVhHNGdJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxPMXh5WEc1OVhISmNibHh5WEc1aElIdGNjbHh1SUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh5WEc0Z0lDQmpiMnh2Y2pvZ0kyWm1aanRjY2x4dWZWeHlYRzVjY2x4dWNDQjdYSEpjYmlBZ0lIQmhaR1JwYm1jNklEQTdYSEpjYmlBZ0lHMWhjbWRwYmpvZ01EdGNjbHh1ZlZ4eVhHNWNjbHh1WW5WMGRHOXVJSHRjY2x4dUlDQWdZbUZqYTJkeWIzVnVaRG9nYm05dVpUdGNjbHh1SUNBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjY2x4dUlDQWdZbTl5WkdWeU9pQnViMjVsTzF4eVhHNGdJQ0J3WVdSa2FXNW5PaUF3TzF4eVhHNGdJQ0J0WVhKbmFXNDZJREE3WEhKY2JpQWdJR052Ykc5eU9pQWpabVptTzF4eVhHNGdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYSEpjYm4xY2NseHVYSEpjYm1neExDQm9NaXdnYURNc0lHZzBMQ0JvTlN3Z2FEWWdlMXh5WEc0Z0lDQnRZWEpuYVc0NklEQTdYSEpjYmlBZ0lIQmhaR1JwYm1jNklEQTdYSEpjYm4waUxDSm9kRzFzSUh0Y2NseHVJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZE5iMjUwYzJWeWNtRjBKeXdnYzJGdWN5MXpaWEpwWmp0Y2NseHVmVnh5WEc1Y2NseHVYSEpjYmk4dklOQ2EwTERSZ2RHQzBMN1F2TkM5MFl2UXVTRFJnZEM2MFlEUXZ0QzcwTHRjY2x4dUx5OGdLaXhjY2x4dUx5OGdhSFJ0YkNBcUlDOHFJRzkyWlhKeWFXUmxJSGd1ZUdoMGJXd3VjblVnYzNSNWJHVWdLaThnWEhKY2JpOHZJSHRjY2x4dUx5OGdJQ0FnYzJOeWIyeHNZbUZ5TFhkcFpIUm9PaUIwYUdsdU8xeHlYRzR2THlBZ0lDQnpZM0p2Ykd4aVlYSXRZMjlzYjNJNklDTXhSVEpFTTBRZ0l6QXhNVFl5Tnp0Y2NseHVMeThnZlZ4eVhHNWNjbHh1THk4Z0tqbzZMWGRsWW10cGRDMXpZM0p2Ykd4aVlYSXNYSEpjYmk4dklHaDBiV3dnS2pvNkxYZGxZbXRwZEMxelkzSnZiR3hpWVhJZ2UxeHlYRzR2THlBZ0lDQm9aV2xuYUhRNklEWndlRHRjY2x4dUx5OGdJQ0FnZDJsa2RHZzZJRFp3ZUR0Y2NseHVMeThnZlZ4eVhHNHZMeUFxT2pvdGQyVmlhMmwwTFhOamNtOXNiR0poY2kxMGNtRmpheXhjY2x4dUx5OGdhSFJ0YkNBcU9qb3RkMlZpYTJsMExYTmpjbTlzYkdKaGNpMTBjbUZqYXlCN1hISmNiaTh2SUNBZ0lHSmhZMnRuY205MWJtUTZJQ013TVRFMk1qYzdYSEpjYmk4dklDQWdJR0p2Y21SbGNpMTBiM0E2SURGd2VDQnpiMnhwWkNBak1ERXhOakkzTzF4eVhHNWNjbHh1WEhKY2JpOHZJSDFjY2x4dUx5OGdLam82TFhkbFltdHBkQzF6WTNKdmJHeGlZWEl0ZEdoMWJXSXNYSEpjYmk4dklHaDBiV3dnS2pvNkxYZGxZbXRwZEMxelkzSnZiR3hpWVhJdGRHaDFiV0lnZTF4eVhHNHZMeUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1VVXlSRE5FTzF4eVhHNHZMeUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF6Y0hnN1hISmNiaTh2SUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTXdNVEUyTWpjN1hISmNiaTh2SUNBZ0lDOHZJR0p2ZUMxemFHRmtiM2M2SURGd2VDQXhjSGdnTVRWd2VDQWpSa1ZCTlRWR08xeHlYRzR2THlCOVhISmNibHh5WEc0dVkyOXVkR0ZwYm1WeUlIdGNjbHh1SUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEhKY2JpQWdJRzFoZUMxM2FXUjBhRG9nTVRFd01IQjRPMXh5WEc0Z0lDQjNhV1IwYURvZ01UQXdKVHRjY2x4dWZWeHlYRzVjY2x4dVhISmNiaUlzSWk1b1pXRmtaWElnZTF4eVhHNGdJQ0JpWVdOclozSnZkVzVrT2lBalJqbEdPVVk1TzF4eVhHNGdJQ0JpYjNndGMyaGhaRzkzT2lBd2NIZ2dNWEI0SURad2VDQnlaMkpoS0RBc0lEQXNJREFzSURBdU1qVXBPenRjY2x4dWZWeHlYRzR1WTI5dWRHRnBibVZ5SUh0Y2NseHVmVnh5WEc0dWFHVmhaR1Z5TFdOdmJuUmhhVzVsY2lCN1hISmNibjFjY2x4dUxtNWhkaUI3WEhKY2JpQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNiaUFnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNjbHh1SUNBZ2FHVnBaMmgwT2lBNE1IQjRPMXh5WEc1OVhISmNiaTV1WVhZdGJHVm1kQ0I3WEhKY2JseHlYRzVjZEZ4MEx5OGdMbTVoZGkxc1pXWjBYMTlzYVhOMFhISmNibHh5WEc1Y2RGeDBKbDlmYkdsemRDQjdYSEpjYmlBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNiaUFnSUNBZ0lDQWdJR2RoY0RvZ016QndlRHRjY2x4dVhIUmNkSDFjY2x4dVhISmNibHgwWEhRdkx5QXVibUYyTFd4bFpuUmZYMmwwWlcxY2NseHVYSEpjYmx4MFhIUW1YMTlwZEdWdElIdGNjbHh1WEhSY2RIMWNjbHh1WEhKY2JseDBYSFF2THlBdWJtRjJMV3hsWm5SZlgyeHBibXRjY2x4dVhISmNibHgwWEhRbVgxOXNhVzVySUh0Y2NseHVJQ0FnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURZd01EdGNjbHh1SUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE0zQjRPMXh5WEc0Z0lDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNVE53ZUR0Y2NseHVJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDTXlOREkwTWpRN1hISmNiaUFnSUNBZ0lDQWdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYSEpjYmx4eVhHNWNkRngwZlZ4eVhHNTlYSEpjYmk1b1pXRmtaWEl0Ykc5bmJ5QjdYSEpjYmx4eVhHNWNkRngwTHk4Z0xtaGxZV1JsY2kxc2IyZHZYMTlwYldkY2NseHVYSEpjYmx4MFhIUW1YMTlwYldjZ2UxeHlYRzRnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVE0xY0hnN1hISmNibHgwWEhSOVhISmNibjFjY2x4dUxtNWhkaTF5YVdkb2RDQjdYSEpjYm4xY2NseHVMbWhsWVdSbGNpMXlhV2RvZENCN1hISmNibHh5WEc1Y2RGeDBMeThnTG1obFlXUmxjaTF5YVdkb2RGOWZiR2x6ZEZ4eVhHNWNjbHh1WEhSY2RDWmZYMnhwYzNRZ2UxeHlYRzRnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnSUNBZ0lDQm5ZWEE2SURNd2NIZzdYSEpjYmx4MFhIUjlYSEpjYmx4eVhHNWNkRngwTHk4Z0xtaGxZV1JsY2kxeWFXZG9kRjlmYVhSbGJWeHlYRzVjY2x4dVhIUmNkQ1pmWDJsMFpXMGdlMXh5WEc1Y2RGeDBmVnh5WEc1Y2NseHVYSFJjZEM4dklDNW9aV0ZrWlhJdGNtbG5hSFJmWDJ4cGJtdGNjbHh1WEhKY2JseDBYSFFtWDE5c2FXNXJJSHRjY2x4dUlDQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2NseHVJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TTNCNE8xeHlYRzRnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01UTndlRHRjY2x4dUlDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNNeU5ESTBNalE3WEhKY2JpQWdJQ0FnSUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hISmNibHgwWEhSOVhISmNibjBpTENJdWFHVmhaR2x1WnlCN1hISmNiaUFnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRFF3Y0hnN1hISmNibHh5WEc0Z0lDQXZMeUF1YUdWaFpHbHVaMTlmYzJ4cFpHVmNjbHh1WEhKY2JpQWdJQ1pmWDNOc2FXUmxJSHRjY2x4dUlDQWdmVnh5WEc1Y2NseHVJQ0FnSmw5ZmFXMW5JSHRjY2x4dUlDQWdmVnh5WEc1Y2NseHVJQ0FnTHk4Z0xtaGxZV1JwYm1kZlgySjBibHh5WEc1Y2NseHVJQ0FnSmw5ZlluUnVJSHRjY2x4dUlDQWdmVnh5WEc1OVhISmNiaTVqYjI1MFlXbHVaWElnZTF4eVhHNTlYSEpjYmk1b1pXRmthVzVuTFdOdmJuUmhhVzVsY2lCN1hISmNibjFjY2x4dUxtaGxZV1JwYm1jdGMyeHBaR1Z5SUh0Y2NseHVmVnh5WEc0dWMyeHBaR1Z5SUh0Y2NseHVJQ0FnZDJsa2RHZzZJREV4TURCd2VEdGNjbHh1SUNBZ2FHVnBaMmgwT2lBME1qQndlRHRjY2x4dUlDQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hISmNiaUFnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVYSEpjYmlBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hISmNibHh5WEc0Z0lDQXZMeUF1YzJ4cFpHVnlYMTlpZEc1Y2NseHVYSEpjYmlBZ0lDWmZYMkowYmlCN1hISmNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lDQWdkRzl3T2lBMU1DVTdYSEpjYmlBZ0lDQWdJSG90YVc1a1pYZzZJREV3TzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURRd2NIZzdYSEpjYmlBZ0lDQWdJSGRwWkhSb09pQTBNSEI0TzF4eVhHNGdJQ0FnSUNCaWIzZ3RjMmhoWkc5M09pQXhjSGdnTVhCNElEUndlQ0J5WjJKaEtEQXNJREFzSURBc0lEQXVNalVwTzF4eVhHNGdJQ0FnSUNBdkx5Qm1hV3gwWlhJNklHUnliM0F0YzJoaFpHOTNLREJ3ZUNBeGNIZ2dOSEI0SUhKblltRW9NQ3dnTUN3Z01Dd2dNQzR4TlNrcE8xeHlYRzRnSUNBZ0lDQmliM0prWlhJNklHNXZibVU3WEhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDTm1abVk3WEhKY2JpQWdJQ0FnSUc5d1lXTnBkSGs2SURBdU56dGNjbHh1SUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05UQWxPMXh5WEc0Z0lDQWdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYSEpjYmlBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTUM0eWN5QmxZWE5sTFdsdUxXOTFkRHRjY2x4dUlDQWdmVnh5WEc1Y2NseHVJQ0FnSmw5ZlluUnVPbWh2ZG1WeUlIdGNjbHh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dNVHRjY2x4dUlDQWdmVnh5WEc1Y2NseHVJQ0FnSmw5ZlluUnVPbWh2ZG1WeUlDNWhjbkp2ZHkxc1pXWjBJSHRjY2x4dUlDQWdJQ0FnWm1sc2JEb2dJME13TXpBNU1qdGNjbHh1SUNBZ2ZWeHlYRzVjY2x4dUlDQWdKbDlmWW5SdU9taHZkbVZ5SUM1aGNuSnZkeTF5YVdkb2RDQjdYSEpjYmlBZ0lDQWdJR1pwYkd3NklDTkRNRE13T1RJN1hISmNiaUFnSUgxY2NseHVYSEpjYmlBZ0lDOHZJQzV6Ykdsa1pYSmZYMkowYmkwdGJHVm1kRnh5WEc1Y2NseHVJQ0FnSmw5ZlluUnVMUzFzWldaMElIdGNjbHh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVJQ0FnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEhKY2JpQWdJQ0FnSUd4bFpuUTZJRGdsTzF4eVhHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpTZ3ROVEFsTENBdE5UQWxLVHRjY2x4dUlDQWdmVnh5WEc1Y2NseHVJQ0FnTHk4Z0xuTnNhV1JsY2w5ZlluUnVMUzF5YVdkb2RGeHlYRzVjY2x4dUlDQWdKbDlmWW5SdUxTMXlhV2RvZENCN1hISmNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0J5YVdkb2REb2dPQ1U3WEhKY2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbEtEVXdKU3dnTFRVd0pTazdYSEpjYmlBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1TG1obFlXUnBibWRmWDJKMGJpMWhjbkp2ZHlCN1hISmNiaUFnSUdobGFXZG9kRG9nTVRWd2VEdGNjbHh1SUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLRGd3SlNrN1hISmNibjFjY2x4dVhISmNiaTVoY25KdmR5MXNaV1owTENBdVlYSnliM2N0Y21sbmFIUWdlMXh5WEc0Z0lDQm9aV2xuYUhRNklERTFjSGc3WEhKY2JpQWdJR1pwYkd3NklDTTRZamhpT0dJN1hISmNiaUFnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZzRNQ1VwTzF4eVhHNGdJQ0IwY21GdWMybDBhVzl1T2lCbWFXeHNJREF1TW5NZ1pXRnpaUzFwYmkxdmRYUTdYSEpjYm4xY2NseHVYSEpjYmk1emJHbGtaU0I3WEhKY2JpQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dUlDQWdkRzl3T2lBME1IQjRPMXh5WEc0Z0lDQnNaV1owT2lBME1IQjRPMXh5WEc0Z0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNGdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1WEhKY2JpQWdJSFJ5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBeGN6dGNjbHh1ZlZ4eVhHNWNjbHh1TG5Oc2FXUmxJRDRnYVcxbklIdGNjbHh1SUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUEwTUhCNE8xeHlYRzRnSUNCM2FXUjBhRG9nTVRBeU1IQjRPMXh5WEc0Z0lDQm9aV2xuYUhRNklETTBNSEI0TzF4eVhHNGdJQ0J2WW1wbFkzUXRabWwwT2lCamIzWmxjanRjY2x4dWZWeHlYRzVjY2x4dUxtaGxZV1JwYm1jdFpHOTBjeUI3WEhKY2JuMWNjbHh1WEhKY2JpNWtiM1J6SUh0Y2NseHVJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNGdJQ0JpYjNSMGIyMDZJREV6SlR0Y2NseHVJQ0FnYkdWbWREb2dOVEFsTzF4eVhHNGdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xUVXdKU2s3WEhKY2JpQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNibjFjY2x4dVhISmNiaTVrYjNSelgxOWtiM1FnZTF4eVhHNGdJQ0JpYjNKa1pYSTZJRzV2Ym1VN1hISmNiaUFnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNORU9VUTVSRGs3WEhKY2JpQWdJRzl3WVdOcGRIazZJREF1Tnp0Y2NseHVJQ0FnYUdWcFoyaDBPaUF4TUhCNE8xeHlYRzRnSUNCM2FXUjBhRG9nTVRCd2VEdGNjbHh1SUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTlRBbE8xeHlYRzRnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREV3Y0hnN1hISmNiaUFnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dUlDQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVOWE03WEhKY2JuMWNjbHh1WEhKY2JpNWtiM1J6WDE5a2IzUTZiR0Z6ZEMxamFHbHNaQ0I3WEhKY2JpQWdJRzFoY21kcGJqb2dNRHRjY2x4dWZWeHlYRzVjY2x4dUxtUnZkSE5mWDJSdmRDMHRZV04wYVhabElIdGNjbHh1SUNBZ0x5b2dZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptWmpzZ0tpOWNjbHh1SUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6STBNalF5TkR0Y2NseHVJQ0FnYjNCaFkybDBlVG9nTVR0Y2NseHVmVnh5WEc0aUxDSXVZMkYwWVd4dlp5QjdYSEpjYmlBZ0lIQmhaR1JwYm1jNklEZ3djSGdnTUhCNElEZ3djSGdnTUhCNE8xeHlYRzRnSUNCaVlXTnJaM0p2ZFc1a09pQWpSamxHT1VZNU8xeHlYRzVjY2x4dUlDQWdMeThnTG1OaGRHRnNiMmRmWDNSbGVIUmNjbHh1WEhKY2JpQWdJQ1pmWDNSbGVIUWdlMXh5WEc0Z0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlNSEI0TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESTRjSGc3WEhKY2JpQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlPSEI0TzF4eVhHNGdJQ0FnSUNCamIyeHZjam9nSXpJME1qUXlORHRjY2x4dUlDQWdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdmVnh5WEc1OVhISmNibHh5WEc0dVkyRjBZV3h2WnkxMGFYUnNaU0I3WEhKY2JpQWdJRzFoY21kcGJpMWliM1IwYjIwNklEUXdjSGc3WEhKY2JpQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYSEpjYmlBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JuMWNjbHh1WEhKY2JpNWpZWFJoYkc5blgxOXpkV0owYVhSc1pTQjdYSEpjYmlBZ0lHWnZiblF0ZDJWcFoyaDBPaUExTURBN1hISmNiaUFnSUdadmJuUXRjMmw2WlRvZ01UTndlRHRjY2x4dUlDQWdiR2x1WlMxb1pXbG5hSFE2SURJNGNIZzdYSEpjYmlBZ0lHTnZiRzl5T2lBak9FSTRRamhDTzF4eVhHNTlYSEpjYmx4eVhHNHVZMjl1ZEdGcGJtVnlJSHRjY2x4dWZWeHlYRzVjY2x4dUxtTmhjbVJ6SUh0Y2NseHVJQ0FnWkdsemNHeGhlVG9nWjNKcFpEdGNjbHh1SUNBZ1ozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUJ5WlhCbFlYUW9ZWFYwYnkxbWFXeHNMQ0F6TWpCd2VDazdYSEpjYmlBZ0lHZGhjRG9nTnpCd2VDQTNNSEI0TzF4eVhHNGdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1ZlZ4eVhHNWNjbHh1TG1OaGNtUnpMV2wwWlcwZ2UxeHlYRzRnSUNBdkx5QjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTUM0eWN5QmxZWE5sTFdsdUxXOTFkRHRjY2x4dVhISmNiaUFnSUNZNmFHOTJaWElnZTF4eVhHNGdJQ0FnSUNBdkx5QjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRod2VDazdYSEpjYmx4eVhHNGdJQ0I5WEhKY2JpQWdJRnh5WEc1Y2NseHVJQ0FnTHk4Z0xtTmhjbVJ6TFdsMFpXMWZYMmx0WjF4eVhHNWNjbHh1SUNBZ0psOWZhVzFuSUh0Y2NseHVJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVRCd2VEdGNjbHh1SUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01UQndlRHRjY2x4dUlDQWdmVnh5WEc1Y2NseHVJQ0FnSmw5ZmFXMW5PbWh2ZG1WeUlIdGNjbHh1SUNBZ2ZWeHlYRzU5WEhKY2JpNWpZWEprY3kxd2NtbGpaU0I3WEhKY2JpQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXdjSGc3WEhKY2JpQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHh5WEc0Z0lDQXZMeUF1WTJGeVpITXRjSEpwWTJWZlgyTjFjbkpsYm5SY2NseHVYSEpjYmlBZ0lDWmZYMk4xY25KbGJuUWdlMXh5WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXhNSEI0TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESXdjSGc3WEhKY2JpQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlNSEI0TzF4eVhHNGdJQ0FnSUNCamIyeHZjam9nSXpJME1qUXlORHRjY2x4dUlDQWdmVnh5WEc1Y2NseHVJQ0FnTHk4Z0xtTmhjbVJ6TFhCeWFXTmxYMTl2YkdSY2NseHVYSEpjYmlBZ0lDWmZYMjlzWkNCN1hISmNiaUFnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hISmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2NseHVJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREJ3ZUR0Y2NseHVJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1TFd4cGJtVTZJR3hwYm1VdGRHaHliM1ZuYUR0Y2NseHVJQ0FnSUNBZ1kyOXNiM0k2SUNNNFFqaENPRUk3WEhKY2JpQWdJSDFjY2x4dWZWeHlYRzR1WTJGeVpITWdlMXh5WEc1Y2NseHVJQ0FnTHk4Z0xtTmhjbVJ6WDE5MGFYUnNaVnh5WEc1Y2NseHVJQ0FnSmw5ZmRHbDBiR1VnZTF4eVhHNGdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TUhCNE8xeHlYRzRnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHlYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUwY0hnN1hISmNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TkhCNE8xeHlYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0l6aENPRUk0UWp0Y2NseHVJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0x5OGdMbU5oY21SelgxOXpkR0Z5WEhKY2JseHlYRzRnSUNBbVgxOXpkR0Z5SUh0Y2NseHVJQ0FnSUNBZ1hISmNibHh5WEc0Z0lDQjlYSEpjYm4xY2NseHVMbU5oY21SekxYTjBZWEp6SUh0Y2NseHVJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNVEJ3ZUR0Y2NseHVmVnh5WEc0dVkyRnlaSE10WW5WMGRHOXVJSHRjY2x4dUlDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHlYRzU5WEhKY2JpNWpZWEprY3kxaWRHNGdlMXh5WEc0Z0lDQmNjbHh1WEhKY2JpQWdJQzh2SUM1allYSmtjeTFpZEc1ZlgyeGxablJjY2x4dVhISmNiaUFnSUNaZlgyeGxablFnZTF4eVhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjY2x4dUlDQWdJQ0FnZDJsa2RHZzZJREUxTUhCNE8xeHlYRzRnSUNBZ0lDQm9aV2xuYUhRNklEUXdjSGc3WEhKY2JpQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5UVzl1ZEhObGNuSmhkQ2M3WEhKY2JpQWdJQ0FnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2NseHVJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4eVhHNGdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNVFp3ZUR0Y2NseHVJQ0FnSUNBZ1kyOXNiM0k2SUNOR1JrWkdSa1k3WEhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklHeHBibVZoY2kxbmNtRmthV1Z1ZENnNU1HUmxaeXdnSTJVMU5ERmlNU0F3SlN3Z0kwTXdNekE1TWlBeE1EQWxLVHRjY2x4dUlDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOWEI0TzF4eVhHNGdJQ0I5WEhKY2JseHlYRzRnSUNBdkx5QXVZMkZ5WkhNdFluUnVYMTl5YVdkb2RGeHlYRzVjY2x4dUlDQWdKbDlmY21sbmFIUWdlMXh5WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1SUNBZ0lDQWdkMmxrZEdnNklERTFNSEI0TzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURRd2NIZzdYSEpjYmlBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblRXOXVkSE5sY25KaGRDYzdYSEpjYmlBZ0lDQWdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjY2x4dUlDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjY2x4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh5WEc0Z0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01UWndlRHRjY2x4dUlDQWdJQ0FnWTI5c2IzSTZJQ05ETlRNeU9UWTdYSEpjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHlYRzRnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBMWNIZzdYSEpjYmlBZ0lDQWdJR0p2Y21SbGNqb2dNbkI0SUhOdmJHbGtJQ05ETURNd09USTdYSEpjYmlBZ0lIMWNjbHh1ZlZ4eVhHNGlMQ0l1WVdKdmRYUWdlMXh5WEc0Z0lDQndZV1JrYVc1bk9pQTRNSEI0SURCd2VEdGNjbHh1SUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTkRCd2VEdGNjbHh1WEhKY2JpQWdJQzh2SUM1aFltOTFkRjlmZEdWNGRDMHRjMlZ0YVdKdmJHUmNjbHh1WEhKY2JpQWdJQ1pmWDNSbGVIUXRMWE5sYldsaWIyeGtJSHRjY2x4dUlDQWdabTl1ZEMxM1pXbG5hSFE2SURZd01EdGNjbHh1SUNBZ2ZWeHlYRzVjY2x4dUlDQWdMeThnTG1GaWIzVjBYMTkwWlhoMExTMTNZbHh5WEc1Y2NseHVJQ0FnSmw5ZmRHVjRkQzB0ZDJJZ2UxeHlYRzRnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTmpBd08xeHlYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV6Y0hnN1hISmNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF5T0hCNE8xeHlYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0kwTTFNekk1Tmp0Y2NseHVJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN1hISmNiaUFnSUgxY2NseHVYSEpjYmlBZ0lDOHZJQzVoWW05MWRGOWZhVzFoWjJWY2NseHVYSEpjYmlBZ0lDWmZYMmx0WVdkbElIdGNjbHh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc0Z0lDQjlYSEpjYmx4eVhHNGdJQ0F2THlBdVlXSnZkWFJmWDNCb2IzUnZMUzF2Ym1WY2NseHVYSEpjYmlBZ0lDWmZYM0JvYjNSdkxTMXZibVVnZTF4eVhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjY2x4dUlDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ0xUUTRjSGc3WEhKY2JpQWdJQ0FnSUhkcFpIUm9PaUEwTURCd2VEdGNjbHh1SUNBZ0lDQWdhR1ZwWjJoME9pQTFNREJ3ZUR0Y2NseHVJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRCd2VEdGNjbHh1SUNBZ2ZWeHlYRzVjY2x4dUlDQWdMeThnTG1GaWIzVjBYMTl3YUc5MGJ5MHRkSGR2WEhKY2JseHlYRzRnSUNBbVgxOXdhRzkwYnkwdGRIZHZJSHRjY2x4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNGdJQ0FnSUNCMGIzQTZJREJ3ZUR0Y2NseHVJQ0FnSUNBZ2JHVm1kRG9nTnpCd2VEdGNjbHh1SUNBZ0lDQWdkMmxrZEdnNklEUXdNSEI0TzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURVd01IQjRPMXh5WEc0Z0lDQWdJQ0I2TFdsdVpHVjRPaUF0TVR0Y2NseHVJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRCd2VEdGNjbHh1WEhKY2JpQWdJSDFjY2x4dWZWeHlYRzR1WTI5dWRHRnBibVZ5SUh0Y2NseHVmVnh5WEc0dVlXSnZkWFF0ZDNKaGNIQmxjaUI3WEhKY2JuMWNjbHh1TG1GaWIzVjBMWFJwZEd4bElIdGNjbHh1SUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTmpCd2VEdGNjbHh1SUNBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2NseHVJQ0FnWm05dWRDMXphWHBsT2lBeU9IQjRPMXh5WEc0Z0lDQnNhVzVsTFdobGFXZG9kRG9nTWpod2VEdGNjbHh1SUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dUlDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2NseHVJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdZMjlzYjNJNklDTXlOREkwTWpRN1hISmNibjFjY2x4dUxtRmliM1YwTFdsdVptOGdlMXh5WEc0Z0lDQndZV1JrYVc1bkxYUnZjRG9nTkRCd2VEdGNjbHh1SUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUEwTUhCNE8xeHlYRzRnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUF4TVRCd2VEdGNjbHh1SUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHlYRzRnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzRnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYSEpjYmlBZ0lIZHBaSFJvT2lBeE1EQWxPMXh5WEc1OVhISmNiaTVoWW05MWRDMWtaWE5qSUh0Y2NseHVJQ0FnZDJsa2RHZzZJRFV3TUhCNE8xeHlYRzVjY2x4dUlDQWdMeThnTG1GaWIzVjBMV1JsYzJOZlgzUmxlSFJjY2x4dVhISmNiaUFnSUNaZlgzUmxlSFFnZTF4eVhHNGdJQ0FnSUNBdkx5QjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQWdJSFJsZUhRdGFXNWtaVzUwT2lBeU1IQjRPMXh5WEc1Y2NseHVJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhNM0I0TzF4eVhHNGdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNamh3ZUR0Y2NseHVJQ0FnSUNBZ1kyOXNiM0k2SUNNeU5ESTBNalE3WEhKY2JpQWdJSDFjY2x4dWZWeHlYRzVjY2x4dUxtRmliM1YwTFdSbGMyTmZYM1JsZUhRNmJtOTBLRHBzWVhOMExXTm9hV3hrS1NCN1hISmNiaUFnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREUxY0hnN1hISmNibjFjY2x4dUlsMTkgKi8iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXHJcbiAqL1xyXG5cclxuIGh0bWwge1xyXG4gICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxuIH1cclxuIFxyXG4gLyogU2VjdGlvbnNcclxuICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiBcclxuIC8qKlxyXG4gICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxyXG4gICovXHJcbiBcclxuIGJvZHkge1xyXG4gICBtYXJnaW46IDA7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXHJcbiAgKi9cclxuIFxyXG4gbWFpbiB7XHJcbiAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcclxuICAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAgKi9cclxuIFxyXG4gaDEge1xyXG4gICBmb250LXNpemU6IDJlbTtcclxuICAgbWFyZ2luOiAwLjY3ZW0gMDtcclxuIH1cclxuIFxyXG4gLyogR3JvdXBpbmcgY29udGVudFxyXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuIFxyXG4gLyoqXHJcbiAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAgKi9cclxuIFxyXG4gaHIge1xyXG4gICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xyXG4gICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxuICAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cclxuIH1cclxuIFxyXG4gLyoqXHJcbiAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICovXHJcbiBcclxuIHByZSB7XHJcbiAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xyXG4gfVxyXG4gXHJcbiAvKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuIFxyXG4gLyoqXHJcbiAgKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAgKi9cclxuIFxyXG4gYSB7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cclxuICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAgKi9cclxuIFxyXG4gYWJiclt0aXRsZV0ge1xyXG4gICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXHJcbiAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXHJcbiAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAgKi9cclxuIFxyXG4gYixcclxuIHN0cm9uZyB7XHJcbiAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICAqL1xyXG4gXHJcbiBjb2RlLFxyXG4ga2JkLFxyXG4gc2FtcCB7XHJcbiAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICovXHJcbiBcclxuIHNtYWxsIHtcclxuICAgZm9udC1zaXplOiA4MCU7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAgKiBhbGwgYnJvd3NlcnMuXHJcbiAgKi9cclxuIFxyXG4gc3ViLFxyXG4gc3VwIHtcclxuICAgZm9udC1zaXplOiA3NSU7XHJcbiAgIGxpbmUtaGVpZ2h0OiAwO1xyXG4gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxuIH1cclxuIFxyXG4gc3ViIHtcclxuICAgYm90dG9tOiAtMC4yNWVtO1xyXG4gfVxyXG4gXHJcbiBzdXAge1xyXG4gICB0b3A6IC0wLjVlbTtcclxuIH1cclxuIFxyXG4gLyogRW1iZWRkZWQgY29udGVudFxyXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuIFxyXG4gLyoqXHJcbiAgKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxyXG4gICovXHJcbiBcclxuIGltZyB7XHJcbiAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICAgd2lkdGg6IDEwMCU7XHJcbiB9XHJcbiBcclxuIC8qIEZvcm1zXHJcbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gXHJcbiAvKipcclxuICAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gICovXHJcbiBcclxuIGJ1dHRvbixcclxuIGlucHV0LFxyXG4gb3B0Z3JvdXAsXHJcbiBzZWxlY3QsXHJcbiB0ZXh0YXJlYSB7XHJcbiAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXHJcbiAgIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG4gICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gICBtYXJnaW46IDA7IC8qIDIgKi9cclxuIH1cclxuIFxyXG4gLyoqXHJcbiAgKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAgKi9cclxuIFxyXG4gYnV0dG9uLFxyXG4gaW5wdXQgeyAvKiAxICovXHJcbiAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gICovXHJcbiBcclxuIGJ1dHRvbixcclxuIHNlbGVjdCB7IC8qIDEgKi9cclxuICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICAqL1xyXG4gXHJcbiBidXR0b24sXHJcbiBbdHlwZT1cImJ1dHRvblwiXSxcclxuIFt0eXBlPVwicmVzZXRcIl0sXHJcbiBbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAgKi9cclxuIFxyXG4gYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG4gW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXHJcbiBbdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG4gW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbiAgIHBhZGRpbmc6IDA7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gICovXHJcbiBcclxuIGJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuIFt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxyXG4gW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcclxuIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcclxuICAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAqL1xyXG4gXHJcbiBmaWVsZHNldCB7XHJcbiAgIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcclxuIH1cclxuIFxyXG4gLyoqXHJcbiAgKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxyXG4gICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgKi9cclxuIFxyXG4gbGVnZW5kIHtcclxuICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xyXG4gICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xyXG4gICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cclxuICAgcGFkZGluZzogMDsgLyogMyAqL1xyXG4gICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICAqL1xyXG4gXHJcbiBwcm9ncmVzcyB7XHJcbiAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxuIH1cclxuIFxyXG4gLyoqXHJcbiAgKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cclxuICAqL1xyXG4gXHJcbiB0ZXh0YXJlYSB7XHJcbiAgIG92ZXJmbG93OiBhdXRvO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxyXG4gICovXHJcbiBcclxuIFt0eXBlPVwiY2hlY2tib3hcIl0sXHJcbiBbdHlwZT1cInJhZGlvXCJdIHtcclxuICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gICBwYWRkaW5nOiAwOyAvKiAyICovXHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gICovXHJcbiBcclxuIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG4gW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gICBoZWlnaHQ6IGF1dG87XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICAqL1xyXG4gXHJcbiBbdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXHJcbiAgIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxyXG4gICovXHJcbiBcclxuIFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAgKi9cclxuIFxyXG4gOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXHJcbiAgIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxuIH1cclxuIFxyXG4gLyogSW50ZXJhY3RpdmVcclxuICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiBcclxuIC8qXHJcbiAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxyXG4gICovXHJcbiBcclxuIGRldGFpbHMge1xyXG4gICBkaXNwbGF5OiBibG9jaztcclxuIH1cclxuIFxyXG4gLypcclxuICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICAqL1xyXG4gXHJcbiBzdW1tYXJ5IHtcclxuICAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG4gfVxyXG4gXHJcbiAvKiBNaXNjXHJcbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gXHJcbiAvKipcclxuICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cclxuICAqL1xyXG4gXHJcbiB0ZW1wbGF0ZSB7XHJcbiAgIGRpc3BsYXk6IG5vbmU7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXHJcbiAgKi9cclxuIFxyXG4gW2hpZGRlbl0ge1xyXG4gICBkaXNwbGF5OiBub25lO1xyXG4gfSIsImh0bWwge1xyXG4gICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5cclxuLy8g0JrQsNGB0YLQvtC80L3Ri9C5INGB0LrRgNC+0LvQu1xyXG4vLyAqLFxyXG4vLyBodG1sICogLyogb3ZlcnJpZGUgeC54aHRtbC5ydSBzdHlsZSAqLyBcclxuLy8ge1xyXG4vLyAgICBzY3JvbGxiYXItd2lkdGg6IHRoaW47XHJcbi8vICAgIHNjcm9sbGJhci1jb2xvcjogIzFFMkQzRCAjMDExNjI3O1xyXG4vLyB9XHJcblxyXG4vLyAqOjotd2Via2l0LXNjcm9sbGJhcixcclxuLy8gaHRtbCAqOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbi8vICAgIGhlaWdodDogNnB4O1xyXG4vLyAgICB3aWR0aDogNnB4O1xyXG4vLyB9XHJcbi8vICo6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrLFxyXG4vLyBodG1sICo6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcclxuLy8gICAgYmFja2dyb3VuZDogIzAxMTYyNztcclxuLy8gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMwMTE2Mjc7XHJcblxyXG5cclxuLy8gfVxyXG4vLyAqOjotd2Via2l0LXNjcm9sbGJhci10aHVtYixcclxuLy8gaHRtbCAqOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XHJcbi8vICAgIGJhY2tncm91bmQtY29sb3I6ICMxRTJEM0Q7XHJcbi8vICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuLy8gICAgYm9yZGVyOiAxcHggc29saWQgIzAxMTYyNztcclxuLy8gICAgLy8gYm94LXNoYWRvdzogMXB4IDFweCAxNXB4ICNGRUE1NUY7XHJcbi8vIH1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICBtYXJnaW46IDAgYXV0bztcclxuICAgbWF4LXdpZHRoOiAxMTAwcHg7XHJcbiAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5cclxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9YnV0dG9uXSxcblt0eXBlPXJlc2V0XSxcblt0eXBlPXN1Ym1pdF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9cmVzZXRdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPWJ1dHRvbl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1yZXNldF06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1zdWJtaXRdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9Y2hlY2tib3hdLFxuW3R5cGU9cmFkaW9dIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1zZWFyY2hdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4qLCAqOjphZnRlciwgKjo6YmVmb3JlIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxudWwge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5wIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgY29sb3I6ICNmZmY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDExMDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjRjlGOUY5O1xuICBib3gtc2hhZG93OiAwcHggMXB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xufVxuXG4ubmF2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBoZWlnaHQ6IDgwcHg7XG59XG5cbi5uYXYtbGVmdF9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMzBweDtcbn1cbi5uYXYtbGVmdF9fbGluayB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDEzcHg7XG4gIGNvbG9yOiAjMjQyNDI0O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uaGVhZGVyLWxvZ29fX2ltZyB7XG4gIHdpZHRoOiAxMzVweDtcbn1cblxuLmhlYWRlci1yaWdodF9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMzBweDtcbn1cbi5oZWFkZXItcmlnaHRfX2xpbmsge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAxM3B4O1xuICBjb2xvcjogIzI0MjQyNDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmhlYWRpbmcge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuLnNsaWRlciB7XG4gIHdpZHRoOiAxMTAwcHg7XG4gIGhlaWdodDogNDIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uc2xpZGVyX19idG4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB6LWluZGV4OiAxMDtcbiAgaGVpZ2h0OiA0MHB4O1xuICB3aWR0aDogNDBweDtcbiAgYm94LXNoYWRvdzogMXB4IDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBvcGFjaXR5OiAwLjc7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1pbi1vdXQ7XG59XG4uc2xpZGVyX19idG46aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLnNsaWRlcl9fYnRuOmhvdmVyIC5hcnJvdy1sZWZ0IHtcbiAgZmlsbDogI0MwMzA5Mjtcbn1cbi5zbGlkZXJfX2J0bjpob3ZlciAuYXJyb3ctcmlnaHQge1xuICBmaWxsOiAjQzAzMDkyO1xufVxuLnNsaWRlcl9fYnRuLS1sZWZ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGxlZnQ6IDglO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cbi5zbGlkZXJfX2J0bi0tcmlnaHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcmlnaHQ6IDglO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIC01MCUpO1xufVxuXG4uaGVhZGluZ19fYnRuLWFycm93IHtcbiAgaGVpZ2h0OiAxNXB4O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODAlKTtcbn1cblxuLmFycm93LWxlZnQsIC5hcnJvdy1yaWdodCB7XG4gIGhlaWdodDogMTVweDtcbiAgZmlsbDogIzhiOGI4YjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDgwJSk7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4ycyBlYXNlLWluLW91dDtcbn1cblxuLnNsaWRlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDQwcHg7XG4gIGxlZnQ6IDQwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXM7XG59XG5cbi5zbGlkZSA+IGltZyB7XG4gIG1hcmdpbi1yaWdodDogNDBweDtcbiAgd2lkdGg6IDEwMjBweDtcbiAgaGVpZ2h0OiAzNDBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5kb3RzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDEzJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5kb3RzX19kb3Qge1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNEOUQ5RDk7XG4gIG9wYWNpdHk6IDAuNztcbiAgaGVpZ2h0OiAxMHB4O1xuICB3aWR0aDogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbi5kb3RzX19kb3Q6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmRvdHNfX2RvdC0tYWN0aXZlIHtcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjQyNDtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmNhdGFsb2cge1xuICBwYWRkaW5nOiA4MHB4IDBweCA4MHB4IDBweDtcbiAgYmFja2dyb3VuZDogI0Y5RjlGOTtcbn1cbi5jYXRhbG9nX190ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAyOHB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICMyNDI0MjQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5jYXRhbG9nLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmNhdGFsb2dfX3N1YnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgY29sb3I6ICM4QjhCOEI7XG59XG5cbi5jYXJkcyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgMzIwcHgpO1xuICBnYXA6IDcwcHggNzBweDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5jYXJkcy1pdGVtX19pbWcge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLmNhcmRzLXByaWNlIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5jYXJkcy1wcmljZV9fY3VycmVudCB7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGNvbG9yOiAjMjQyNDI0O1xufVxuLmNhcmRzLXByaWNlX19vbGQge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAwcHg7XG4gIHRleHQtZGVjb3JhdGlvbi1saW5lOiBsaW5lLXRocm91Z2g7XG4gIGNvbG9yOiAjOEI4QjhCO1xufVxuXG4uY2FyZHNfX3RpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTRweDtcbiAgY29sb3I6ICM4QjhCOEI7XG59XG4uY2FyZHMtc3RhcnMge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uY2FyZHMtYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uY2FyZHMtYnRuX19sZWZ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgI2U1NDFiMSAwJSwgI0MwMzA5MiAxMDAlKTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuLmNhcmRzLWJ0bl9fcmlnaHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDE1MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBjb2xvcjogI0M1MzI5NjtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAycHggc29saWQgI0MwMzA5Mjtcbn1cblxuLmFib3V0IHtcbiAgcGFkZGluZzogODBweCAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG59XG4uYWJvdXRfX3RleHQtLXNlbWlib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbi5hYm91dF9fdGV4dC0td2Ige1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBjb2xvcjogI0M1MzI5NjtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4uYWJvdXRfX2ltYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmFib3V0X19waG90by0tb25lIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IC00OHB4O1xuICB3aWR0aDogNDAwcHg7XG4gIGhlaWdodDogNTAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4uYWJvdXRfX3Bob3RvLS10d28ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICBsZWZ0OiA3MHB4O1xuICB3aWR0aDogNDAwcHg7XG4gIGhlaWdodDogNTAwcHg7XG4gIHotaW5kZXg6IC0xO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4uYWJvdXQtdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDI4cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzI0MjQyNDtcbn1cblxuLmFib3V0LWluZm8ge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYWJvdXQtZGVzYyB7XG4gIHdpZHRoOiA1MDBweDtcbn1cbi5hYm91dC1kZXNjX190ZXh0IHtcbiAgdGV4dC1pbmRlbnQ6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gIGNvbG9yOiAjMjQyNDI0O1xufVxuXG4uYWJvdXQtZGVzY19fdGV4dDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn0iLCIuaGVhZGVyIHtcclxuICAgYmFja2dyb3VuZDogI0Y5RjlGOTtcclxuICAgYm94LXNoYWRvdzogMHB4IDFweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTs7XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcbn1cclxuLmhlYWRlci1jb250YWluZXIge1xyXG59XHJcbi5uYXYge1xyXG4gICBkaXNwbGF5OiBmbGV4O1xyXG4gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgIGhlaWdodDogODBweDtcclxufVxyXG4ubmF2LWxlZnQge1xyXG5cclxuXHRcdC8vIC5uYXYtbGVmdF9fbGlzdFxyXG5cclxuXHRcdCZfX2xpc3Qge1xyXG4gICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICBnYXA6IDMwcHg7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gLm5hdi1sZWZ0X19pdGVtXHJcblxyXG5cdFx0Jl9faXRlbSB7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gLm5hdi1sZWZ0X19saW5rXHJcblxyXG5cdFx0Jl9fbGluayB7XHJcbiAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgbGluZS1oZWlnaHQ6IDEzcHg7XHJcbiAgICAgICAgIGNvbG9yOiAjMjQyNDI0O1xyXG4gICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cclxuXHRcdH1cclxufVxyXG4uaGVhZGVyLWxvZ28ge1xyXG5cclxuXHRcdC8vIC5oZWFkZXItbG9nb19faW1nXHJcblxyXG5cdFx0Jl9faW1nIHtcclxuICAgICAgICAgd2lkdGg6IDEzNXB4O1xyXG5cdFx0fVxyXG59XHJcbi5uYXYtcmlnaHQge1xyXG59XHJcbi5oZWFkZXItcmlnaHQge1xyXG5cclxuXHRcdC8vIC5oZWFkZXItcmlnaHRfX2xpc3RcclxuXHJcblx0XHQmX19saXN0IHtcclxuICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgZ2FwOiAzMHB4O1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIC5oZWFkZXItcmlnaHRfX2l0ZW1cclxuXHJcblx0XHQmX19pdGVtIHtcclxuXHRcdH1cclxuXHJcblx0XHQvLyAuaGVhZGVyLXJpZ2h0X19saW5rXHJcblxyXG5cdFx0Jl9fbGluayB7XHJcbiAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgbGluZS1oZWlnaHQ6IDEzcHg7XHJcbiAgICAgICAgIGNvbG9yOiAjMjQyNDI0O1xyXG4gICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdFx0fVxyXG59IiwiKiwgKjo6YWZ0ZXIsICo6OmJlZm9yZSB7XHJcbiAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gICBcclxufVxyXG5cclxuYm9keSB7XHJcbiAgIG1hcmdpbjogMDtcclxuICAgcGFkZGluZzogMDtcclxufVxyXG5cclxudWwge1xyXG4gICBwYWRkaW5nOiAwO1xyXG4gICBtYXJnaW46IDA7XHJcbiAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbmEge1xyXG4gICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG5wIHtcclxuICAgcGFkZGluZzogMDtcclxuICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICBvdXRsaW5lOiBub25lO1xyXG4gICBib3JkZXI6IG5vbmU7XHJcbiAgIHBhZGRpbmc6IDA7XHJcbiAgIG1hcmdpbjogMDtcclxuICAgY29sb3I6ICNmZmY7XHJcbiAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XHJcbiAgIG1hcmdpbjogMDtcclxuICAgcGFkZGluZzogMDtcclxufSIsIi5oZWFkaW5nIHtcclxuICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuXHJcbiAgIC8vIC5oZWFkaW5nX19zbGlkZVxyXG5cclxuICAgJl9fc2xpZGUge1xyXG4gICB9XHJcblxyXG4gICAmX19pbWcge1xyXG4gICB9XHJcblxyXG4gICAvLyAuaGVhZGluZ19fYnRuXHJcblxyXG4gICAmX19idG4ge1xyXG4gICB9XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcbn1cclxuLmhlYWRpbmctY29udGFpbmVyIHtcclxufVxyXG4uaGVhZGluZy1zbGlkZXIge1xyXG59XHJcbi5zbGlkZXIge1xyXG4gICB3aWR0aDogMTEwMHB4O1xyXG4gICBoZWlnaHQ6IDQyMHB4O1xyXG4gICBtYXJnaW46IDAgYXV0bztcclxuICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgIC8vIC5zbGlkZXJfX2J0blxyXG5cclxuICAgJl9fYnRuIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgei1pbmRleDogMTA7XHJcbiAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XHJcbiAgICAgIC8vIGZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjE1KSk7XHJcbiAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgb3BhY2l0eTogMC43O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW4tb3V0O1xyXG4gICB9XHJcblxyXG4gICAmX19idG46aG92ZXIge1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICB9XHJcblxyXG4gICAmX19idG46aG92ZXIgLmFycm93LWxlZnQge1xyXG4gICAgICBmaWxsOiAjQzAzMDkyO1xyXG4gICB9XHJcblxyXG4gICAmX19idG46aG92ZXIgLmFycm93LXJpZ2h0IHtcclxuICAgICAgZmlsbDogI0MwMzA5MjtcclxuICAgfVxyXG5cclxuICAgLy8gLnNsaWRlcl9fYnRuLS1sZWZ0XHJcblxyXG4gICAmX19idG4tLWxlZnQge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgbGVmdDogOCU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICB9XHJcblxyXG4gICAvLyAuc2xpZGVyX19idG4tLXJpZ2h0XHJcblxyXG4gICAmX19idG4tLXJpZ2h0IHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIHJpZ2h0OiA4JTtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNTAlLCAtNTAlKTtcclxuICAgfVxyXG59XHJcblxyXG4uaGVhZGluZ19fYnRuLWFycm93IHtcclxuICAgaGVpZ2h0OiAxNXB4O1xyXG4gICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoODAlKTtcclxufVxyXG5cclxuLmFycm93LWxlZnQsIC5hcnJvdy1yaWdodCB7XHJcbiAgIGhlaWdodDogMTVweDtcclxuICAgZmlsbDogIzhiOGI4YjtcclxuICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDgwJSk7XHJcbiAgIHRyYW5zaXRpb246IGZpbGwgMC4ycyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLnNsaWRlIHtcclxuICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICB0b3A6IDQwcHg7XHJcbiAgIGxlZnQ6IDQwcHg7XHJcbiAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzO1xyXG59XHJcblxyXG4uc2xpZGUgPiBpbWcge1xyXG4gICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcbiAgIHdpZHRoOiAxMDIwcHg7XHJcbiAgIGhlaWdodDogMzQwcHg7XHJcbiAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG59XHJcblxyXG4uaGVhZGluZy1kb3RzIHtcclxufVxyXG5cclxuLmRvdHMge1xyXG4gICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgIGJvdHRvbTogMTMlO1xyXG4gICBsZWZ0OiA1MCU7XHJcbiAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuLmRvdHNfX2RvdCB7XHJcbiAgIGJvcmRlcjogbm9uZTtcclxuICAgYmFja2dyb3VuZC1jb2xvcjogI0Q5RDlEOTtcclxuICAgb3BhY2l0eTogMC43O1xyXG4gICBoZWlnaHQ6IDEwcHg7XHJcbiAgIHdpZHRoOiAxMHB4O1xyXG4gICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICB0cmFuc2l0aW9uOiBhbGwgMC41cztcclxufVxyXG5cclxuLmRvdHNfX2RvdDpsYXN0LWNoaWxkIHtcclxuICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4uZG90c19fZG90LS1hY3RpdmUge1xyXG4gICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyAqL1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNDI0O1xyXG4gICBvcGFjaXR5OiAxO1xyXG59XHJcbiIsIi5jYXRhbG9nIHtcclxuICAgcGFkZGluZzogODBweCAwcHggODBweCAwcHg7XHJcbiAgIGJhY2tncm91bmQ6ICNGOUY5Rjk7XHJcblxyXG4gICAvLyAuY2F0YWxvZ19fdGV4dFxyXG5cclxuICAgJl9fdGV4dCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbiAgICAgIGNvbG9yOiAjMjQyNDI0O1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICB9XHJcbn1cclxuXHJcbi5jYXRhbG9nLXRpdGxlIHtcclxuICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgZGlzcGxheTogZmxleDtcclxuICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmNhdGFsb2dfX3N1YnRpdGxlIHtcclxuICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICBsaW5lLWhlaWdodDogMjhweDtcclxuICAgY29sb3I6ICM4QjhCOEI7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG59XHJcblxyXG4uY2FyZHMge1xyXG4gICBkaXNwbGF5OiBncmlkO1xyXG4gICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIDMyMHB4KTtcclxuICAgZ2FwOiA3MHB4IDcwcHg7XHJcbiAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uY2FyZHMtaXRlbSB7XHJcbiAgIC8vIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGVhc2UtaW4tb3V0O1xyXG5cclxuICAgJjpob3ZlciB7XHJcbiAgICAgIC8vIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtOHB4KTtcclxuXHJcbiAgIH1cclxuICAgXHJcblxyXG4gICAvLyAuY2FyZHMtaXRlbV9faW1nXHJcblxyXG4gICAmX19pbWcge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICB9XHJcblxyXG4gICAmX19pbWc6aG92ZXIge1xyXG4gICB9XHJcbn1cclxuLmNhcmRzLXByaWNlIHtcclxuICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgZGlzcGxheTogZmxleDtcclxuICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgIC8vIC5jYXJkcy1wcmljZV9fY3VycmVudFxyXG5cclxuICAgJl9fY3VycmVudCB7XHJcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgIGNvbG9yOiAjMjQyNDI0O1xyXG4gICB9XHJcblxyXG4gICAvLyAuY2FyZHMtcHJpY2VfX29sZFxyXG5cclxuICAgJl9fb2xkIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMHB4O1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb24tbGluZTogbGluZS10aHJvdWdoO1xyXG4gICAgICBjb2xvcjogIzhCOEI4QjtcclxuICAgfVxyXG59XHJcbi5jYXJkcyB7XHJcblxyXG4gICAvLyAuY2FyZHNfX3RpdGxlXHJcblxyXG4gICAmX190aXRsZSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDE0cHg7XHJcbiAgICAgIGNvbG9yOiAjOEI4QjhCO1xyXG4gICB9XHJcblxyXG4gICAvLyAuY2FyZHNfX3N0YXJcclxuXHJcbiAgICZfX3N0YXIge1xyXG4gICAgICBcclxuXHJcbiAgIH1cclxufVxyXG4uY2FyZHMtc3RhcnMge1xyXG4gICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbi5jYXJkcy1idXR0b24ge1xyXG4gICBkaXNwbGF5OiBmbGV4O1xyXG4gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuLmNhcmRzLWJ0biB7XHJcbiAgIFxyXG5cclxuICAgLy8gLmNhcmRzLWJ0bl9fbGVmdFxyXG5cclxuICAgJl9fbGVmdCB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICB3aWR0aDogMTUwcHg7XHJcbiAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcclxuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xyXG4gICAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjZTU0MWIxIDAlLCAjQzAzMDkyIDEwMCUpO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5jYXJkcy1idG5fX3JpZ2h0XHJcblxyXG4gICAmX19yaWdodCB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICB3aWR0aDogMTUwcHg7XHJcbiAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcclxuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xyXG4gICAgICBjb2xvcjogI0M1MzI5NjtcclxuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgYm9yZGVyOiAycHggc29saWQgI0MwMzA5MjtcclxuICAgfVxyXG59XHJcbiIsIi5hYm91dCB7XHJcbiAgIHBhZGRpbmc6IDgwcHggMHB4O1xyXG4gICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG5cclxuICAgLy8gLmFib3V0X190ZXh0LS1zZW1pYm9sZFxyXG5cclxuICAgJl9fdGV4dC0tc2VtaWJvbGQge1xyXG4gICBmb250LXdlaWdodDogNjAwO1xyXG4gICB9XHJcblxyXG4gICAvLyAuYWJvdXRfX3RleHQtLXdiXHJcblxyXG4gICAmX190ZXh0LS13YiB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbiAgICAgIGNvbG9yOiAjQzUzMjk2O1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgfVxyXG5cclxuICAgLy8gLmFib3V0X19pbWFnZVxyXG5cclxuICAgJl9faW1hZ2Uge1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgIH1cclxuXHJcbiAgIC8vIC5hYm91dF9fcGhvdG8tLW9uZVxyXG5cclxuICAgJl9fcGhvdG8tLW9uZSB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBtYXJnaW4tdG9wOiAtNDhweDtcclxuICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICB9XHJcblxyXG4gICAvLyAuYWJvdXRfX3Bob3RvLS10d29cclxuXHJcbiAgICZfX3Bob3RvLS10d28ge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMHB4O1xyXG4gICAgICBsZWZ0OiA3MHB4O1xyXG4gICAgICB3aWR0aDogNDAwcHg7XHJcbiAgICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG5cclxuICAgfVxyXG59XHJcbi5jb250YWluZXIge1xyXG59XHJcbi5hYm91dC13cmFwcGVyIHtcclxufVxyXG4uYWJvdXQtdGl0bGUge1xyXG4gICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG4gICBmb250LXdlaWdodDogNjAwO1xyXG4gICBmb250LXNpemU6IDI4cHg7XHJcbiAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICBkaXNwbGF5OiBmbGV4O1xyXG4gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICBjb2xvcjogIzI0MjQyNDtcclxufVxyXG4uYWJvdXQtaW5mbyB7XHJcbiAgIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICBwYWRkaW5nLWxlZnQ6IDQwcHg7XHJcbiAgIHBhZGRpbmctcmlnaHQ6IDExMHB4O1xyXG4gICBkaXNwbGF5OiBmbGV4O1xyXG4gICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmFib3V0LWRlc2Mge1xyXG4gICB3aWR0aDogNTAwcHg7XHJcblxyXG4gICAvLyAuYWJvdXQtZGVzY19fdGV4dFxyXG5cclxuICAgJl9fdGV4dCB7XHJcbiAgICAgIC8vIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgdGV4dC1pbmRlbnQ6IDIwcHg7XHJcblxyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICAgICBjb2xvcjogIzI0MjQyNDtcclxuICAgfVxyXG59XHJcblxyXG4uYWJvdXQtZGVzY19fdGV4dDpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufVxyXG4iXX0= */