/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%;font-family:"Montserrat",sans-serif}body{margin:0;padding:0}details,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0;text-decoration:none;color:#fff}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;width:100%}button{font:100%/1.15 inherit}input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ul{padding:0;margin:0;list-style:none}button{background:0 0;outline:0;border:0;color:#fff;cursor:pointer}button,h1,h2,h3,h4,h5,h6,p{margin:0;padding:0}.container{margin:0 auto;max-width:1100px;width:100%}.header{background:#f9f9f9;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.25);box-shadow:0 1px 6px rgba(0,0,0,.25)}.nav,.nav-left__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.nav{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:80px}.nav-left__list{gap:30px}.nav-left__link{font-weight:600;font-size:13px;line-height:13px;color:#242424;text-transform:uppercase}.header-logo__img{width:135px}.header-right__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:30px}.header-right__link{font-weight:600;font-size:13px;line-height:13px;color:#242424;text-transform:uppercase}.heading{margin-bottom:40px}.slider{width:1100px;height:420px;margin:0 auto;position:relative;overflow:hidden}.slider__btn{position:absolute;top:50%;z-index:10;border:0;background:#fff;opacity:.6;border-radius:50%;height:40px;width:40px;cursor:pointer;-webkit-transition:opacity .2s ease-in-out;-o-transition:opacity .2s ease-in-out;transition:opacity .2s ease-in-out}.slider__btn:hover{opacity:1}.slider__btn--left,.slider__btn--right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.slider__btn--left{left:8%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.slider__btn--right{right:8%;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%)}.heading__btn-arrow{height:15px;-webkit-transform:translateY(80%);-ms-transform:translateY(80%);transform:translateY(80%)}.dots,.slide{position:absolute;display:-webkit-box;display:-ms-flexbox;display:flex}.slide{top:40px;left:40px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:-webkit-transform 1s;-o-transition:transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.slide>img{margin-right:40px;width:1020px;height:340px;-o-object-fit:cover;object-fit:cover}.dots{bottom:13%;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.dots__dot{background:#d9d9d9;border:0;opacity:.7;height:10px;width:10px;border-radius:50%;margin-right:10px;cursor:pointer;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s}.dots__dot:last-child{margin:0}.dots__dot--active{background:#242424;opacity:1}.catalog{padding:80px 0;background:#f9f9f9}.catalog__text{margin-bottom:20px;font-weight:600;font-size:28px;line-height:28px;color:#242424;text-transform:uppercase}.catalog-title{margin-bottom:40px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center}.catalog__subtitle{font-weight:500;font-size:13px;line-height:28px;color:#8b8b8b}.cards{display:grid;grid-template-columns:repeat(auto-fill,320px);gap:70px 70px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.cards-item__img,.cards-price{margin-bottom:10px}.cards-price{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.cards-price__current{padding-right:10px;font-weight:600;font-size:20px;line-height:20px;color:#242424}.cards-price__old{font-weight:600;font-size:16px;line-height:0;-webkit-text-decoration-line:line-through;text-decoration-line:line-through;color:#8b8b8b}.cards__title{font-weight:500;font-size:14px;line-height:14px;color:#8b8b8b}.cards-stars,.cards__title{margin-bottom:10px}.cards-btn__left,.cards-btn__right,.cards-button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.cards-btn__left,.cards-btn__right{font:500 16px/16px "Montserrat";-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:150px;height:40px;border-radius:5px}.cards-btn__left{color:#fff;background:-webkit-gradient(linear,left top,right top,from(#e541b1),to(#c03092));background:-o-linear-gradient(left,#e541b1 0,#c03092 100%);background:linear-gradient(90deg,#e541b1 0,#c03092 100%)}.cards-btn__right{color:#c53296;background:0 0;border:2px solid #c03092}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */